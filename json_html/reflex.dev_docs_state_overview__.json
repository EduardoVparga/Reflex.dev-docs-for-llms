{
  "url": "https://reflex.dev/docs/state/overview/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"state\">State</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">State allows us to create interactive apps that can respond to user input.\nIt defines the variables that can change over time, and the functions that can modify them.</p><div class=\"css-10ddbmu\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-tzz23y\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd26kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-x6dm7o\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R526kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"css-170rups\"><p class=\"rt-Text css-56tzch\">Video: State Overview</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-5zj1nk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R526kml6:\" class=\"AccordionContent css-16eixt1\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd26kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/state/overview/#state-basics\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"state-basics\">State Basics</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can define state by creating a class that inherits from <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State</code>:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your app state here.\"\"\"</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">A state class is made up of two parts: vars and event handlers.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><strong>Vars</strong> are variables in your app that can change over time.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><strong>Event handlers</strong> are functions that modify these vars in response to events.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">These are the main concepts to understand how state works in Reflex:</p><div class=\"rt-Grid rt-r-gtc-2 rt-r-gap-2 css-9tf9ac\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\">Base Var</h1><ul class=\"css-13faj5y\"><li>Any variable in your app that can change over time.</li><li>Defined as a field in a <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">State</code> class</li><li>Can only be modified by event handlers.</li></ul></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\">Computed Var</h1><ul class=\"css-13faj5y\"><li>Vars that change automatically based on other vars.</li><li>Defined as functions using the <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">@rx.var</code> decorator.</li><li>Cannot be set by event handlers, are always recomputed when the state changes.</li></ul></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\">Event Trigger</h1><ul class=\"css-13faj5y\"><li>A user interaction that triggers an event, such as a button click.</li><li>Defined as special component props, such as <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">on_click</code>.</li><li>Can be used to trigger event handlers.</li></ul></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\">Event Handlers</h1><ul class=\"css-13faj5y\"><li>Functions that update the state in response to events.</li><li>Defined as methods in the <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">State</code> class.</li><li>Can be called by event triggers, or by other event handlers.</li></ul></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/state/overview/#example\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"example\">Example</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is a example of how to use state within a Reflex app.\nClick the text to change its color.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-sw92ox\">Welcome to Reflex!</h1></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ExampleState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # A base var for the list of colors to cycle through.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    colors: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"black\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"purple\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # A base var for the index of the current color.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    index: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> next_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"\"\"An event handler to go to the next color.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Event handlers can modify the base vars.</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Here we reference the base vars `colors` and `index`.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.index </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.index </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#D19A66\"> 1</span><span style=\"color:#ABB2BF\">) </span><span style=\"color:#56B6C2\">%</span><span style=\"color:#56B6C2\"> len</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.colors)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"\"\"A computed var that returns the current color.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Computed vars update automatically when the state changes.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.colors[</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.index]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"Welcome to Reflex!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Event handlers can be bound to event triggers.</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ExampleState.next_color,</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # State vars can be bound to component props.</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ExampleState.color,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        _hover</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">{</span><span style=\"color:#98C379\">\"cursor\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"pointer\"</span><span style=\"color:#ABB2BF\">},</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The base vars are <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colors</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">index</code>. They are the only vars in the app that\nmay be directly modified within event handlers.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">There is a single computed var, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code>, that is a function of the base vars. It\nwill be computed automatically whenever the base vars change.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The heading component links its <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> event to the\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ExampleState.next_color</code> event handler, which increments the color index.</p><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-1kyhe5f\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd9mkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-opwgoy\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R59mkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-1ioup9u\"><svg class=\"lucide lucide-circle-check css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"m9 12 2 2 4-4\"></path></svg></div><div class=\"css-fssxhv\"><p class=\"rt-Text css-56tzch\">With Reflex, you never have to write an API.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-1ioup9u\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R59mkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd9mkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-1g1zb7l\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rda6kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-nh0mh4\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R5a6kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-1ha2jce\"><svg class=\"lucide lucide-info css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div><div class=\"css-1l85t71\"><p class=\"rt-Text css-56tzch\">State vs. Instance?</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-1ha2jce\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R5a6kml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rda6kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rdamkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R5amkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">Cannot print a State var.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R5amkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rdamkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/state/overview/#client-states\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"client-states\">Client States</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Each user who opens your app has a unique ID and their own copy of the state.\nThis means that each user can interact with the app and modify the state\nindependently of other users.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Because Reflex internally creates a new instance of the state for each user, your code should\nnever directly initialize a state class.</p><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-tjvfc7\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-1 rx-Stack css-99pxke\"><div class=\"rt-Box css-1ha2jce\"><svg class=\"lucide lucide-info css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div><div class=\"css-1w54oj2\"><p class=\"rt-Text css-56tzch\">Try opening an app in multiple tabs to see how the state changes independently.</p></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">All user state is stored on the server, and all event handlers are executed on\nthe server. Reflex uses websockets to send events to the server, and to send\nstate updates back to the client.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/state/overview/#helper-methods\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"helper-methods\">Helper Methods</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Similar to backend vars, any method defined in a State class that begins with an\nunderscore <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">_</code> is considered a helper method. Such methods are not usable as\nevent triggers, but may be called from other event handler methods within the\nstate.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Functionality that should only be available on the backend, such as an\nauthenticated action, should use helper methods to ensure it is not accidentally\nor maliciously triggered by the client.</p></article>"
  ]
}