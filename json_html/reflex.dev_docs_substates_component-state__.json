{
  "url": "https://reflex.dev/docs/substates/component-state/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"component-state\">Component State</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><em>New in version 0.4.6</em>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Defining a subclass of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.ComponentState</code> creates a special type of state that is tied to an\ninstance of a component, rather than existing globally in the app. A Component State combines\n<a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/ui/overview/\">UI code</a> with state <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/vars/base-vars/\">Vars</a> and\n<a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/events/events-overview/\">Event Handlers</a>,\nand is useful for creating reusable components which operate independently of each other.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/substates/component-state/#using-componentstate\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"using-componentstate\">Using ComponentState</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ReusableCounter</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">ComponentState</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    count: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> increment</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> decrement</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">-=</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @</span><span style=\"color:#56B6C2\">classmethod</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> get_component</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">cls</span><span style=\"color:#ABB2BF\">, **</span><span style=\"color:#D19A66;font-style:italic\">props</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Decrement\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.decrement),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.count),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Increment\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.increment),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            **props,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">reusable_counter </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> ReusableCounter.create</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> multiple_counters</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        reusable_counter</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        reusable_counter</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        reusable_counter</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The vars and event handlers defined on the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ReusableCounter</code>\nclass are treated similarly to a normal State class, but will be scoped to the component instance. Each time a\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reusable_counter</code> is created, a new state class for that instance of the component is also created.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">get_component</code> classmethod is used to define the UI for the component and link it up to the State, which\nis accessed via the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cls</code> argument. Other states may also be referenced by the returned component, but\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cls</code> will always be the instance of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ComponentState</code> that is unique to the component being returned.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/substates/component-state/#passing-props\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"passing-props\">Passing Props</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Similar to a normal Component, the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ComponentState.create</code> classmethod accepts the arbitrary\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">*children</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">**props</code> arguments, and by default passes them to your <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">get_component</code> classmethod.\nThese arguments may be used to customize the component, either by applying defaults or\npassing props to certain subcomponents.</p><span class=\"rt-Separator rt-r-orientation-horizontal rt-r-size-4 css-1ezhfzu\" data-accent-color=\"gray\"></span><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In the following example, we implement an editable text component that allows the user to click on\nthe text to turn it into an input field. If the user does not provide their own <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">value</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_change</code>\nprops, then the defaults defined in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">EditableText</code> class will be used.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-4g6ai3\">Click to edit</p><p class=\"rt-Text css-cx1aee\">Edit me!</p><p class=\"rt-Text css-1yfycb2\">Reflex is fun</p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> EditableText</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">ComponentState</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    text: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Click to edit\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    original_text: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    editing: </span><span style=\"color:#56B6C2\">bool</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> False</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> start_editing</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">original_text</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.original_text </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> original_text</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.editing </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\"> True</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> stop_editing</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.editing </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\"> False</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.original_text </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @</span><span style=\"color:#56B6C2\">classmethod</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> get_component</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">cls</span><span style=\"color:#ABB2BF\">, **</span><span style=\"color:#D19A66;font-style:italic\">props</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Pop component-specific props with defaults before passing **props</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        value </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> props.</span><span style=\"color:#61AFEF\">pop</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"value\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.text)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        on_change </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> props.</span><span style=\"color:#61AFEF\">pop</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"on_change\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.set_text)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        cursor </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> props.</span><span style=\"color:#61AFEF\">pop</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"cursor\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"pointer\"</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Set the initial value of the State var.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        initial_value </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> props.</span><span style=\"color:#61AFEF\">pop</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"initial_value\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">None</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        if</span><span style=\"color:#ABB2BF\"> initial_value </span><span style=\"color:#C678DD\">is</span><span style=\"color:#C678DD\"> not</span><span style=\"color:#D19A66\"> None</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">            # Update the pydantic model to use the initial value as default.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            cls</span><span style=\"color:#ABB2BF\">.__fields__[</span><span style=\"color:#98C379\">\"text\"</span><span style=\"color:#ABB2BF\">].default </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> initial_value</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Form elements for editing, saving and reverting the text.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        edit_controls </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">value,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">on_change,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                **props,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">icon_button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">icon</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"x\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">                    on_change</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.original_text),</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                    cls</span><span style=\"color:#ABB2BF\">.stop_editing,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                type</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"button\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">icon_button</span><span style=\"color:#ABB2BF\">(rx.</span><span style=\"color:#61AFEF\">icon</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"check\"</span><span style=\"color:#ABB2BF\">)),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"center\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Return the text or the form based on the editing Var.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            cls</span><span style=\"color:#ABB2BF\">.editing,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">form</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                edit_controls,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> _</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">stop_editing</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                value,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\">cls</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">start_editing</span><span style=\"color:#ABB2BF\">(value),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                cursor</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">cursor,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                **props,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">editable_text </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> EditableText.create</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> editable_text_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        editable_text</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        editable_text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            initial_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Edit me!\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"blue\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        editable_text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            initial_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Reflex is fun\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            font_family</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"monospace\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><span class=\"rt-Separator rt-r-orientation-horizontal rt-r-size-4 css-1ezhfzu\" data-accent-color=\"gray\"></span><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Because this <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">EditableText</code> component is designed to be reusable, it can handle the case\nwhere the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">value</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_change</code> are linked to a normal global state.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-4g6ai3\">Global state text</p><p class=\"rt-Text\">GLOBAL STATE TEXT</p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> EditableTextDemoState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    value: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Global state text\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> editable_text_with_global_state</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        editable_text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EditableTextDemoState.value,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EditableTextDemoState.set_value,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(EditableTextDemoState.value.</span><span style=\"color:#61AFEF\">upper</span><span style=\"color:#ABB2BF\">()),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/substates/component-state/#accessing-the-state\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"accessing-the-state\">Accessing the State</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The underlying state class of a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ComponentState</code> is accessible via the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">.State</code> attribute. To use it,\nassign an instance of the component to a local variable, then include that instance in the page.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Total: 0</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> counter_sum</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    counter1 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#61AFEF\"> reusable_counter</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    counter2 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#61AFEF\"> reusable_counter</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            f</span><span style=\"color:#98C379\">\"Total: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">counter1.State.count </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#ABB2BF\"> counter2.State.count</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        counter1,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        counter2,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><span class=\"rt-Separator rt-r-orientation-horizontal rt-r-size-4 css-1ezhfzu\" data-accent-color=\"gray\"></span><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Other components can also affect a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ComponentState</code> by referencing its event handlers or vars\nvia the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">.State</code> attribute.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Decrement</button><p class=\"rt-Text\">0</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Increment</button></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-IconButton css-1vae7t2\" data-accent-color=\"\"><svg class=\"lucide lucide-step-back css-svt5ra\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><line x1=\"18\" x2=\"18\" y1=\"20\" y2=\"4\"></line><polygon points=\"14,20 4,12 14,4\"></polygon></svg></button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-IconButton css-1vae7t2\" data-accent-color=\"\"><svg class=\"lucide lucide-plus css-svt5ra\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 12h14\"></path><path d=\"M12 5v14\"></path></svg></button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Double</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Triple</button></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> extended_counter</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    counter1 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#61AFEF\"> reusable_counter</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        counter1,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">icon_button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">icon</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"step_back\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">counter1.State.</span><span style=\"color:#61AFEF\">set_count</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">icon_button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">icon</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"plus\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">counter1.State.increment,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Double\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">counter1.State.</span><span style=\"color:#61AFEF\">set_count</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    counter1.State.count </span><span style=\"color:#56B6C2\">*</span><span style=\"color:#D19A66\"> 2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Triple\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">counter1.State.</span><span style=\"color:#61AFEF\">set_count</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    counter1.State.count </span><span style=\"color:#56B6C2\">*</span><span style=\"color:#D19A66\"> 3</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div></article>"
  ]
}