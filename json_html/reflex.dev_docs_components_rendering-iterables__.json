{
  "url": "https://reflex.dev/docs/components/rendering-iterables/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"rendering-iterables\">Rendering Iterables</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Recall again from the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/getting-started/basics/\">basics</a> that we cannot use Python <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">for</code> loops when referencing state vars in Reflex. Instead, use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> component to render components from a collection of data.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> colored_box</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(color, </span><span style=\"color:#E06C75;font-style:italic\">background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(IterState.color, colored_box),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here's the same example using a lambda function.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            IterState.color,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> color</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#61AFEF\">colored_box</span><span style=\"color:#ABB2BF\">(color),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can also use lambda functions directly with components without defining a separate function.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            IterState.color,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> color</span><span style=\"color:#ABB2BF\">: rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                color, </span><span style=\"color:#E06C75;font-style:italic\">background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this first simple example we iterate through a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code> of colors and render a dynamic number of buttons.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The first argument of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> function is the state var that you want to iterate through. The second argument is a function that takes in an item from the data and returns a component. In this case, the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colored_box</code> function takes in a color and returns a button with that color.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#for-vs-foreach\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"for-vs-foreach\">For vs Foreach</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"rt-Box css-1r9jlsz\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\"> Regular For Loop</h1>* Use when iterating over constants.\n</div></div><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\"> Foreach</h1>* Use when iterating over state vars.</div></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The above example could have been written using a regular Python <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">for</code> loop, since the data is constant.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">colors </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons_for</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        [</span><span style=\"color:#61AFEF\">colored_box</span><span style=\"color:#ABB2BF\">(color) </span><span style=\"color:#C678DD\">for</span><span style=\"color:#ABB2BF\"> color </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> colors],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">However, as soon as you need the data to be dynamic, you must use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button><form class=\"Root css-8atqhb\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" name=\"color\" placeholder=\"Add a color\" spellcheck=\"false\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Add</button></form></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> DynamicIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> add_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">form_data</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.color.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">(form_data[</span><span style=\"color:#98C379\">\"color\"</span><span style=\"color:#ABB2BF\">])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(DynamicIterState.color, colored_box),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">form</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"color\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Add a color\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Add\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicIterState.add_color,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#render-function\"><h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"render-function\">Render Function</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The function to render each item can be defined either as a separate function or as a lambda function. In the example below, we define the function <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colored_box</code> separately and pass it to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> function.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IterState2</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> colored_box</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(color, </span><span style=\"color:#E06C75;font-style:italic\">background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons2</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(IterState2.color, colored_box),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Notice that the type annotation for the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code> parameter in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colored_box</code> function is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.Var[str]</code> (rather than just <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">str</code>). This is because the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> function passes the item as a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">Var</code> object, which is a wrapper around the actual value. This is what allows us to compile the frontend without knowing the actual value of the state var (which is only known at runtime).</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#enumerating-iterables\"><h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"enumerating-iterables\">Enumerating Iterables</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The function can also take an index as a second argument, meaning that we can enumerate through data as shown in the example below.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">1. red</button></div><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">2. green</button></div><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">3. blue</button></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IterIndexState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> create_button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#D19A66;font-style:italic\">index</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#C678DD\">f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">index </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#D19A66\"> 1}</span><span style=\"color:#98C379\">. </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">color</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        padding_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> enumerate_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(IterIndexState.color, create_button),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here's the same example using a lambda function.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> enumerate_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            IterIndexState.color,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> color</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">index</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#61AFEF\">create_button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                color, index</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#iterating-dictionaries\"><h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"iterating-dictionaries\">Iterating Dictionaries</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We can iterate through a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> using a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code>. When the dict is passed through to the function that renders each item, it is presented as a list of key-value pairs <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">[(\"sky\", \"blue\"), (\"balloon\", \"red\"), (\"grass\", \"green\")]</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Grid rt-r-gtc-3\"><div class=\"rt-Box css-r7n01v\"><p class=\"rt-Text\">sky</p></div><div class=\"rt-Box css-1f4xcx9\"><p class=\"rt-Text\">balloon</p></div><div class=\"rt-Box css-so0a46\"><p class=\"rt-Text\">grass</p></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> SimpleDictIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color_chart: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"sky\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"balloon\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"grass\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> display_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # color is presented as a list key-value pairs [(\"sky\", \"blue\"), (\"balloon\", \"red\"), (\"grass\", \"green\")]</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]), </span><span style=\"color:#E06C75;font-style:italic\">bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#E06C75;font-style:italic\">padding_x</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1.5em\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dict_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">grid</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            SimpleDictIterState.color_chart,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            display_color,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        columns</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\"><h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rqemkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:Raemkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">Dict Type Annotation.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:Raemkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rqemkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#nested-examples\"><h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"nested-examples\">Nested examples</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> can be used with nested state vars. Here we use nested <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> components to render the nested state vars. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach(project[\"technologies\"], get_badge)</code> inside of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">project_item</code> function, renders the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> values which are of type <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code>. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.box(rx.foreach(NestedStateFE.projects, project_item))</code> inside of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects_example</code> function renders each <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> inside of the overall state var <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Box\"><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Next.js</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Prisma</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Tailwind</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">MySQL</span></div></div><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Python</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Flask</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> NestedStateFE</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    projects: list[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Next.js\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Prisma\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Tailwind\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"MySQL\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Python\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Flask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> get_badge</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">technology</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        technology, </span><span style=\"color:#E06C75;font-style:italic\">variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> project_item</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    project</span><span style=\"color:#ABB2BF\">: rx.Var[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">]]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(project[</span><span style=\"color:#98C379\">\"technologies\"</span><span style=\"color:#ABB2BF\">], get_badge)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> projects_example</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(NestedStateFE.projects, project_item)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you want an example where not all of the values in the dict are the same type then check out the example on <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/vars/var-operations/\">var operations using foreach</a>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is a further example of how to use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> with a nested data structure.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Grid rt-r-gtc-3\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-1txeb3g\">purple</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-1443u2l\"><p class=\"rt-Text css-1xu3tth\">red</p></div><div class=\"rt-Box css-ky2d75\"><p class=\"rt-Text css-1xu3tth\">blue</p></div></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-7kmldq\">orange</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-61k11p\"><p class=\"rt-Text css-1xu3tth\">yellow</p></div><div class=\"rt-Box css-1443u2l\"><p class=\"rt-Text css-1xu3tth\">red</p></div></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-bjcoli\">green</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-ky2d75\"><p class=\"rt-Text css-1xu3tth\">blue</p></div><div class=\"rt-Box css-61k11p\"><p class=\"rt-Text css-1xu3tth\">yellow</p></div></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> NestedDictIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color_chart: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"purple\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"orange\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"yellow\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"yellow\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> display_colors</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                color[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                lambda</span><span style=\"color:#D19A66;font-style:italic\"> x</span><span style=\"color:#ABB2BF\">: rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(x, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"black\"</span><span style=\"color:#ABB2BF\">), </span><span style=\"color:#E06C75;font-style:italic\">bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">x</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> nested_dict_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">grid</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            NestedDictIterState.color_chart,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            display_colors,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        columns</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#foreach-with-cond\"><h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"foreach-with-cond\">Foreach with Cond</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We can also use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> with the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cond</code> component.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this example we define the function <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">render_item</code>. This function takes in an <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item</code>, uses the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cond</code> to check if the item <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">is_packed</code>. If it is packed it returns the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item_name</code> with a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">✔</code> next to it, and if not then it just returns the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item_name</code>. We use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> to iterate over all of the items in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">to_do_list</code> using the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">render_item</code> function.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Sammy's Packing List</p><ul class=\"css-i4p2sg\"><li>Space suit ✔</li><li>Helmet ✔</li><li>Back Pack</li></ul></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> dataclasses</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@dataclasses</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">dataclass</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ToDoListItem</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    item_name: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    is_packed: </span><span style=\"color:#56B6C2\">bool</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ForeachCondState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    to_do_list: list[ToDoListItem] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Space suit\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Helmet\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Back Pack\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">False</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> render_item</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">item</span><span style=\"color:#ABB2BF\">: rx.Var[ToDoListItem]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        item.is_packed,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.list.</span><span style=\"color:#61AFEF\">item</span><span style=\"color:#ABB2BF\">(item.item_name </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#98C379\"> \" ✔\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.list.</span><span style=\"color:#61AFEF\">item</span><span style=\"color:#ABB2BF\">(item.item_name),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> packing_list</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Sammy's Packing List\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">list</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ForeachCondState.to_do_list, render_item</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div></article>",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\"> Regular For Loop</h1>* Use when iterating over constants.\n</div></div><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-7r3j43\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-18bzl1o\"> Foreach</h1>* Use when iterating over state vars.</div></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The above example could have been written using a regular Python <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">for</code> loop, since the data is constant.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">colors </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons_for</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        [</span><span style=\"color:#61AFEF\">colored_box</span><span style=\"color:#ABB2BF\">(color) </span><span style=\"color:#C678DD\">for</span><span style=\"color:#ABB2BF\"> color </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> colors],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">However, as soon as you need the data to be dynamic, you must use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button><form class=\"Root css-8atqhb\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" name=\"color\" placeholder=\"Add a color\" spellcheck=\"false\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Add</button></form></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> DynamicIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> add_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">form_data</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.color.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">(form_data[</span><span style=\"color:#98C379\">\"color\"</span><span style=\"color:#ABB2BF\">])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(DynamicIterState.color, colored_box),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">form</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"color\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Add a color\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Add\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicIterState.add_color,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#render-function\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"render-function\">Render Function</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The function to render each item can be defined either as a separate function or as a lambda function. In the example below, we define the function <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colored_box</code> separately and pass it to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> function.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f5yfbg\" data-accent-color=\"\">red</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-ggod7l\" data-accent-color=\"\">green</button><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-f9xk9e\" data-accent-color=\"\">blue</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IterState2</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> colored_box</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(color, </span><span style=\"color:#E06C75;font-style:italic\">background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dynamic_buttons2</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(IterState2.color, colored_box),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Notice that the type annotation for the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code> parameter in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">colored_box</code> function is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.Var[str]</code> (rather than just <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">str</code>). This is because the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> function passes the item as a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">Var</code> object, which is a wrapper around the actual value. This is what allows us to compile the frontend without knowing the actual value of the state var (which is only known at runtime).</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#enumerating-iterables\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"enumerating-iterables\">Enumerating Iterables</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The function can also take an index as a second argument, meaning that we can enumerate through data as shown in the example below.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">1. red</button></div><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">2. green</button></div><div class=\"rt-Box css-1c5m94w\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">3. blue</button></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IterIndexState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> create_button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#D19A66;font-style:italic\">index</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#C678DD\">f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">index </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#D19A66\"> 1}</span><span style=\"color:#98C379\">. </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">color</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        padding_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> enumerate_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(IterIndexState.color, create_button),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here's the same example using a lambda function.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> enumerate_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            IterIndexState.color,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> color</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">index</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#61AFEF\">create_button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                color, index</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#iterating-dictionaries\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"iterating-dictionaries\">Iterating Dictionaries</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We can iterate through a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> using a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code>. When the dict is passed through to the function that renders each item, it is presented as a list of key-value pairs <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">[(\"sky\", \"blue\"), (\"balloon\", \"red\"), (\"grass\", \"green\")]</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Grid rt-r-gtc-3\"><div class=\"rt-Box css-r7n01v\"><p class=\"rt-Text\">sky</p></div><div class=\"rt-Box css-1f4xcx9\"><p class=\"rt-Text\">balloon</p></div><div class=\"rt-Box css-so0a46\"><p class=\"rt-Text\">grass</p></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> SimpleDictIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color_chart: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"sky\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"balloon\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"grass\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> display_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # color is presented as a list key-value pairs [(\"sky\", \"blue\"), (\"balloon\", \"red\"), (\"grass\", \"green\")]</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]), </span><span style=\"color:#E06C75;font-style:italic\">bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#E06C75;font-style:italic\">padding_x</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1.5em\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> dict_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">grid</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            SimpleDictIterState.color_chart,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            display_color,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        columns</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rqemkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:Raemkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">Dict Type Annotation.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:Raemkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rqemkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#nested-examples\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"nested-examples\">Nested examples</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach</code> can be used with nested state vars. Here we use nested <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> components to render the nested state vars. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.foreach(project[\"technologies\"], get_badge)</code> inside of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">project_item</code> function, renders the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> values which are of type <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code>. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.box(rx.foreach(NestedStateFE.projects, project_item))</code> inside of the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects_example</code> function renders each <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> inside of the overall state var <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Box\"><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Next.js</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Prisma</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Tailwind</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">MySQL</span></div></div><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Python</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Flask</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> NestedStateFE</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    projects: list[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Next.js\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Prisma\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Tailwind\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"MySQL\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Python\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Flask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> get_badge</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">technology</span><span style=\"color:#ABB2BF\">: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        technology, </span><span style=\"color:#E06C75;font-style:italic\">variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> project_item</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#D19A66;font-style:italic\">    project</span><span style=\"color:#ABB2BF\">: rx.Var[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">]]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(project[</span><span style=\"color:#98C379\">\"technologies\"</span><span style=\"color:#ABB2BF\">], get_badge)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> projects_example</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(NestedStateFE.projects, project_item)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you want an example where not all of the values in the dict are the same type then check out the example on <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/vars/var-operations/\">var operations using foreach</a>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is a further example of how to use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> with a nested data structure.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Grid rt-r-gtc-3\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-1txeb3g\">purple</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-1443u2l\"><p class=\"rt-Text css-1xu3tth\">red</p></div><div class=\"rt-Box css-ky2d75\"><p class=\"rt-Text css-1xu3tth\">blue</p></div></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-7kmldq\">orange</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-61k11p\"><p class=\"rt-Text css-1xu3tth\">yellow</p></div><div class=\"rt-Box css-1443u2l\"><p class=\"rt-Text css-1xu3tth\">red</p></div></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text css-bjcoli\">green</p><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box css-ky2d75\"><p class=\"rt-Text css-1xu3tth\">blue</p></div><div class=\"rt-Box css-61k11p\"><p class=\"rt-Text css-1xu3tth\">yellow</p></div></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> NestedDictIterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color_chart: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"purple\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"orange\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"yellow\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"green\"</span><span style=\"color:#ABB2BF\">: [</span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"yellow\"</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    }</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> display_colors</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: rx.Var[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">], </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">color[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                color[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                lambda</span><span style=\"color:#D19A66;font-style:italic\"> x</span><span style=\"color:#ABB2BF\">: rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(x, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"black\"</span><span style=\"color:#ABB2BF\">), </span><span style=\"color:#E06C75;font-style:italic\">bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">x</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> nested_dict_foreach</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">grid</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            NestedDictIterState.color_chart,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            display_colors,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        columns</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/rendering-iterables/#foreach-with-cond\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"foreach-with-cond\">Foreach with Cond</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We can also use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> with the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cond</code> component.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this example we define the function <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">render_item</code>. This function takes in an <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item</code>, uses the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cond</code> to check if the item <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">is_packed</code>. If it is packed it returns the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item_name</code> with a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">✔</code> next to it, and if not then it just returns the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">item_name</code>. We use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code> to iterate over all of the items in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">to_do_list</code> using the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">render_item</code> function.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Sammy's Packing List</p><ul class=\"css-i4p2sg\"><li>Space suit ✔</li><li>Helmet ✔</li><li>Back Pack</li></ul></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> dataclasses</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@dataclasses</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">dataclass</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ToDoListItem</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    item_name: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    is_packed: </span><span style=\"color:#56B6C2\">bool</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ForeachCondState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    to_do_list: list[ToDoListItem] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Space suit\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Helmet\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ToDoListItem</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            item_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Back Pack\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">is_packed</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">False</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> render_item</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">item</span><span style=\"color:#ABB2BF\">: rx.Var[ToDoListItem]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        item.is_packed,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.list.</span><span style=\"color:#61AFEF\">item</span><span style=\"color:#ABB2BF\">(item.item_name </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#98C379\"> \" ✔\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.list.</span><span style=\"color:#61AFEF\">item</span><span style=\"color:#ABB2BF\">(item.item_name),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> packing_list</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Sammy's Packing List\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">list</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ForeachCondState.to_do_list, render_item</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div></article>"
  ]
}