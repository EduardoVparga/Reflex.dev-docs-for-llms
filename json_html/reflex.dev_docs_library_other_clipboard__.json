{
  "url": "https://reflex.dev/docs/library/other/clipboard/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"clipboard\">Clipboard</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><em>New in 0.5.6</em></p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The Clipboard component can be used to respond to paste events with complex data.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If the Clipboard component is included in a page without children,\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.clipboard()</code>, then it will attach to the document's <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">paste</code> event handler\nand will be triggered when data is pasted anywhere into the page.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\">Paste Content Here</div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ClipboardPasteState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> on_paste</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">data</span><span style=\"color:#ABB2BF\">: list[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        for</span><span style=\"color:#ABB2BF\"> mime_type, item </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> data:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            yield</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">toast</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Pasted </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">mime_type</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\"> data: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">item</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> clipboard_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">fragment</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">clipboard</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">on_paste</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ClipboardPasteState.on_paste),</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"Paste Content Here\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">data</code> argument passed to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_paste</code> method is a list of tuples, where\neach tuple contains the MIME type of the pasted data and the data itself. Binary\ndata will be base64 encoded as a data URI, and can be decoded using python's\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">urlopen</code> or used directly as the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">src</code> prop of an image.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/library/other/clipboard/#scoped-paste-events\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"scoped-paste-events\">Scoped Paste Events</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you want to limit the scope of the paste event to a specific element, wrap\nthe <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.clipboard</code> component around the elements that should trigger the paste\nevent.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">To avoid having outer paste handlers also trigger the event, you can use the\nevent action <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">.stop_propagation</code> to prevent the paste from bubbling up through\nthe DOM.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you need to also prevent the default action of pasting the data into a text\nbox, you can also attach the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">.prevent_default</code> action.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" id=\"clipboard_osofknkp\" placeholder=\"Paste Image (stop propagation)\" spellcheck=\"false\"/></div><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" id=\"clipboard_kskehtsh\" placeholder=\"Paste Image (prevent default)\" spellcheck=\"false\"/></div><img/></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ClipboardPasteImageState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    last_image_uri: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> on_paste</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">data</span><span style=\"color:#ABB2BF\">: list[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        for</span><span style=\"color:#ABB2BF\"> mime_type, item </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> data:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            if</span><span style=\"color:#ABB2BF\"> mime_type.</span><span style=\"color:#61AFEF\">startswith</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"image/\"</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                self</span><span style=\"color:#ABB2BF\">.last_image_uri </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> item</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                break</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        else</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">toast</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Did not find an image in the pasted data\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> clipboard_image_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">clipboard</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Paste Image (stop propagation)\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_paste</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ClipboardPasteImageState.on_paste.stop_propagation,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">clipboard</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Paste Image (prevent default)\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_paste</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ClipboardPasteImageState.on_paste.prevent_default,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">image</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            src</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ClipboardPasteImageState.last_image_uri</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/library/other/clipboard/#api-reference\">",
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"api-reference\">API Reference</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"rt-Box flex flex-col\"><div class=\"rt-Box pb-8 w-full text-left\"><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/library/other/clipboard/#rx.clipboard\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"rx.clipboard\">rx.clipboard</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"rt-Box pb-2\"><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Clipboard component.</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-ScrollAreaRoot max-h-96 mb-4\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><div class=\"rt-TableRoot rt-r-size-1 rt-variant-surface px-0 w-full border border-slate-4\"><div class=\"rt-ScrollAreaRoot\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><table class=\"rt-TableRootTable\"><style>\n                    .rt-TableRoot:where(.rt-variant-surface) :where(.rt-TableRootTable) :where(.rt-TableHeader) {\n                    --table-row-background-color: \"transparent\"\n                    }\n                    </style><thead class=\"rt-TableHeader bg-slate-3\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableColumnHeaderCell font-small text-slate-12 text-normal w-auto justify-start pl-4 font-bold\" scope=\"col\">Prop</th><th class=\"rt-TableCell rt-TableColumnHeaderCell font-small text-slate-12 text-normal w-auto justify-start pl-4 font-bold\" scope=\"col\">Type | Values</th><th class=\"rt-TableCell rt-TableColumnHeaderCell font-small text-slate-12 text-normal w-auto justify-start pl-4 font-bold\" scope=\"col\">Default</th></tr></thead><tbody class=\"rt-TableBody bg-slate-2\"><tr class=\"rt-TableRow rt-r-va-middle\"><td class=\"rt-TableCell justify-start pl-4\"><div class=\"rt-Box flex flex-row items-center gap-2\"><code class=\"rt-reset rt-Code rt-variant-soft code-style text-nowrap leading-normal\" data-accent-color=\"\">targets</code><svg class=\"lucide lucide-info rt-HoverCardTrigger !text-slate-9 shrink-0 css-svt5ra\" data-state=\"closed\" fill=\"none\" height=\"15\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"15\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div></td><td class=\"rt-TableCell justify-start pl-4\"><div class=\"rt-Box flex flex-row items-center gap-2\"><code class=\"rt-reset rt-Code rt-variant-soft code-style text-nowrap leading-normal css-1iimtbt\" data-accent-color=\"\">Sequence</code></div></td><td class=\"rt-TableCell justify-start pl-4\"><div class=\"rt-Box flex\"><code class=\"rt-reset rt-Code rt-variant-soft code-style leading-normal text-nowrap css-1iimtbt\" data-accent-color=\"\"></code></div></td></tr></tbody></table></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div><p class=\"rt-Text\"></p><div class=\"rt-Box pb-6 w-full justify-start flex flex-col gap-6 max-h-[40rem]\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large text-slate-12 css-134ffhx\">Event Triggers</h3><a class=\"rt-Text rt-reset rt-Link rt-underline-auto text-violet-11 font-base css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/api-reference/event-triggers/\" target=\"_blank\">See the full list of default event triggers</a><div class=\"rt-ScrollAreaRoot w-full justify-start overflow-hidden\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><div class=\"rt-TableRoot rt-r-size-1 rt-variant-surface w-full border border-slate-4\"><div class=\"rt-ScrollAreaRoot\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><table class=\"rt-TableRootTable\"><style>\n                    .rt-TableRoot:where(.rt-variant-surface) :where(.rt-TableRootTable) :where(.rt-TableHeader) {\n                        --table-row-background-color: \"transparent\"\n                    }\n                </style><thead class=\"rt-TableHeader bg-slate-3\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableColumnHeaderCell font-small text-slate-12 text-normal w-auto justify-start pl-4 font-bold\" scope=\"col\">Trigger</th><th class=\"rt-TableCell rt-TableColumnHeaderCell font-small text-slate-12 text-normal w-auto justify-start pl-4 font-bold\" scope=\"col\">Description</th></tr></thead><tbody class=\"rt-TableBody bg-slate-2\"><tr class=\"rt-TableRow\"><td class=\"rt-TableCell justify-start p-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_paste</code></td><td class=\"rt-TableCell justify-start p-4 text-slate-11 font-small\"> Called when the user pastes data into the document. Data is a list of tuples of (mime_type, data). Binary types will be base64 encoded as a data uri.</td></tr></tbody></table></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div></div></div></div></article>"
  ]
}