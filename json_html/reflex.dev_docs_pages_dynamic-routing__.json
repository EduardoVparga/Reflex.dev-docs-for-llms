{
  "url": "https://reflex.dev/docs/pages/dynamic-routing/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"dynamic-routes\">Dynamic Routes</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Dynamic routes in Reflex allow you to handle varying URL structures, enabling you to create flexible\nand adaptable web applications. This section covers regular dynamic routes, catch-all routes,\nand optional catch-all routes, each with detailed examples.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/pages/dynamic-routing/#regular-dynamic-routes\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"regular-dynamic-routes\">Regular Dynamic Routes</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Regular dynamic routes in Reflex allow you to match specific segments in a URL dynamically. A regular dynamic route is defined by square brackets in a route string / url pattern. For example <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/[id]</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/[category]</code>. These dynamic route arguments can be accessed through a state var. For the examples above they would be <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State.id</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State.category</code> respectively.</p><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-1g1zb7l\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd36kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-nh0mh4\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R536kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-1ha2jce\"><svg class=\"lucide lucide-info css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div><div class=\"css-1l85t71\"><p class=\"rt-Text css-56tzch\">Why is the state var accessed as <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">rx.State.id</code>?</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-1ha2jce\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R536kml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd36kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Example:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/post/[pid]\"</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> post</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"A page that updates based on the route.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Displays the dynamic part of the URL, the post ID</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(rx.State.pid)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The [pid] part in the route is a dynamic segment, meaning it can match any value provided in the URL. For instance, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/5</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/10</code>, or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/abc</code> would all match this route.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If a user navigates to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/5</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.post_id</code> will return <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">5</code>, and the page will display <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">5</code> as the heading. If the URL is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/xyz</code>, it will display <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">xyz</code>. If the URL is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/post/</code> without any additional parameter, it will display <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">\"\"</code>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/pages/dynamic-routing/#adding-dynamic-routes\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"adding-dynamic-routes\">Adding Dynamic Routes</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Adding dynamic routes uses the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">add_page</code> method like any other page. The only difference is that the route string contains dynamic segments enclosed in square brackets.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you are using the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">app.add_page</code> method to define pages, it is necessary to add the dynamic routes first, especially if they use the same function as a non dynamic route.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">For example the code snippet below will:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    index,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/page/[page_id]\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    on_load</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicState.on_load,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    index, </span><span style=\"color:#E06C75;font-style:italic\">route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/static/x\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_load</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicState.on_load</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">But if we switch the order of adding the pages, like in the example below, it will not work:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    index, </span><span style=\"color:#E06C75;font-style:italic\">route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/static/x\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_load</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicState.on_load</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    index,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/page/[page_id]\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    on_load</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DynamicState.on_load,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/pages/dynamic-routing/#catch-all-routes\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"catch-all-routes\">Catch-All Routes</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Catch-all routes in Reflex allow you to match any number of segments in a URL dynamically.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Example:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> user_post</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        args </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.router.page.params</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        usernames </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> args.</span><span style=\"color:#61AFEF\">get</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"username\"</span><span style=\"color:#ABB2BF\">, [])</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#C678DD\"> f</span><span style=\"color:#98C379\">\"Posts by </span><span style=\"color:#D19A66\">{</span><span style=\"color:#98C379\">', '</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">join</span><span style=\"color:#ABB2BF\">(usernames)</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/users/[id]/posts/[...username]\"</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> post</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(State.user_post))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this case, the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">...username</code> catch-all pattern captures any number of segments after\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/</code>, allowing URLs like <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/2/posts/john/</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/1/posts/john/doe/</code> to match the route.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/pages/dynamic-routing/#optional-catch-all-routes\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"optional-catch-all-routes\">Optional Catch-All Routes</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Optional catch-all routes, enclosed in double square brackets (<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">[[...]]</code>). This indicates that the specified segments\nare optional, and the route can match URLs with or without those segments.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Example:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> user_post</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        args </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.router.page.params</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        usernames </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> args.</span><span style=\"color:#61AFEF\">get</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"username\"</span><span style=\"color:#ABB2BF\">, [])</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#C678DD\"> f</span><span style=\"color:#98C379\">\"Posts by </span><span style=\"color:#D19A66\">{</span><span style=\"color:#98C379\">\", \"</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">join</span><span style=\"color:#ABB2BF\">(usernames)</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">route</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"/users/[id]/posts/[[...username]]\"</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> post</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(State.user_post))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Optional catch-all routes allow matching URLs with or without specific segments.\nEach optional catch-all pattern should be independent and not nested within another catch-all pattern.</p><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-tjvfc7\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-1 rx-Stack css-99pxke\"><div class=\"rt-Box css-1ha2jce\"><svg class=\"lucide lucide-info css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div><div class=\"css-1w54oj2\"><p class=\"rt-Text css-56tzch\">Catch-all routes must be placed at the end of the URL pattern to ensure proper route matching.</p></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/pages/dynamic-routing/#routes-validation-table\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"routes-validation-table\">Routes Validation Table</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a>\n<table><thead><tr><th style=\"text-align:left\">Route Pattern</th><th style=\"text-align:left\">Example URl</th><th style=\"text-align:right\">valid</th></tr></thead><tbody><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/posts</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/posts</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/[category]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/[username]/posts/[id]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/john/posts/5</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/[...username]/posts</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/john/posts</code></td><td style=\"text-align:right\">invalid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/john/doe/posts</code></td><td style=\"text-align:right\">invalid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/[...username]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/john/</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/users/john/doe</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/[category]/[...subcategories]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops/lenovo</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/[category]/[[...subcategories]]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops/lenovo</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops/lenovo/thinkpad</code></td><td style=\"text-align:right\">valid</td></tr><tr><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/[category]/[...subcategories]/[...items]</code></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops</code></td><td style=\"text-align:right\">invalid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops/lenovo</code></td><td style=\"text-align:right\">invalid</td></tr><tr><td style=\"text-align:left\"></td><td style=\"text-align:left\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/products/electronics/laptops/lenovo/thinkpad</code></td><td style=\"text-align:right\">invalid</td></tr></tbody></table></article>"
  ]
}