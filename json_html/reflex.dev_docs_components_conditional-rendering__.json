{
  "url": "https://reflex.dev/docs/components/conditional-rendering/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"conditional-rendering\">Conditional Rendering</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Recall from the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/getting-started/basics/\">basics</a> that we cannot use Python <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">if/else</code> statements when referencing state vars in Reflex. Instead, use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.cond</code> component to conditionally render components or set props based on the value of a state var.</p><div class=\"css-10ddbmu\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-tzz23y\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd26kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-x6dm7o\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R526kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"css-170rups\"><p class=\"rt-Text css-56tzch\">Video: Conditional Rendering</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-5zj1nk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R526kml6:\" class=\"AccordionContent css-16eixt1\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd26kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-tjvfc7\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-1 rx-Stack css-99pxke\"><div class=\"rt-Box css-1ha2jce\"><svg class=\"lucide lucide-info css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"M12 16v-4\"></path><path d=\"M12 8h.01\"></path></svg></div><div class=\"css-1w54oj2\"><p class=\"rt-Text css-56tzch\">Check out the API reference for <a class=\"rt-Text rt-reset rt-Link rt-underline-auto css-1macts\" data-accent-color=\"\" href=\"/docs/library/dynamic-rendering/cond/\">cond docs</a>.</p></div></div></div><div class=\"rt-Box css-15xkte7\"></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Below is a simple example showing how to toggle between two text components by checking the value of the state var <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">show</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Toggle</button><p class=\"rt-Text css-14ksm7b\">Text 1</p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> CondSimpleState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    show: </span><span style=\"color:#56B6C2\">bool</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> True</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> change</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.show </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> not</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.show)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> cond_simple_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Toggle\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">CondSimpleState.change</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            CondSimpleState.show,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Text 1\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Text 2\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">show</code> is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">True</code> then the first component is rendered (in this case the blue text). Otherwise the second component is rendered (in this case the red text).</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/conditional-rendering/#conditional-props\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"conditional-props\">Conditional Props</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can also set props conditionally using <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.cond</code>. In this example, we set the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code> prop of a text component based on the value of the state var <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">show</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><span aria-disabled=\"false\" class=\"rt-SliderRoot rt-r-size-2 rt-variant-surface css-8atqhb\" data-accent-color=\"pink\" data-orientation=\"horizontal\" dir=\"ltr\" style=\"--radix-slider-thumb-transform:translateX(-50%)\" width=\"100%\"><span class=\"rt-SliderTrack\" data-orientation=\"horizontal\"><span class=\"rt-SliderRange\" data-orientation=\"horizontal\" style=\"left:0%;right:50%\"></span></span><span style=\"transform: var(--radix-slider-thumb-transform); position: absolute; left: calc(50% - 1.11022e-16px);\"><span aria-orientation=\"horizontal\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"50\" class=\"rt-SliderThumb\" data-orientation=\"horizontal\" data-radix-collection-item=\"\" role=\"slider\" style=\"\" tabindex=\"0\"></span></span></span></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> PropCondState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    value: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> set_end</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">value</span><span style=\"color:#ABB2BF\">: list[</span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">]):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.value </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> value[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> cond_prop</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">slider</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        default_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span><span style=\"color:#D19A66\">50</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        on_value_commit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">PropCondState.set_end,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            PropCondState.value </span><span style=\"color:#56B6C2\">&gt;</span><span style=\"color:#D19A66\"> 50</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"pink\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/conditional-rendering/#var-operations\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"var-operations\">Var Operations</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can use <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/vars/var-operations/\">var operations</a> with the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">cond</code> component for more complex conditions. See the full <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/dynamic-rendering/cond/\">cond reference</a> for more details.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/components/conditional-rendering/#multiple-conditional-statements\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"multiple-conditional-statements\">Multiple Conditional Statements</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/dynamic-rendering/match/\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.match</code></a> component in Reflex provides a powerful alternative to<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.cond</code> for handling multiple conditional statements and structural pattern matching. This component allows you to handle multiple conditions and their associated components in a cleaner and more readable way compared to nested <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.cond</code> structures.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column css-1lvttxw\"><p class=\"rt-Text\">Unknown cat breed selected.</p><button aria-autocomplete=\"none\" aria-controls=\"radix-:Rkomkml6:\" aria-expanded=\"false\" class=\"rt-reset rt-SelectTrigger rt-r-size-2 rt-variant-surface\" data-placeholder=\"\" data-state=\"closed\" dir=\"ltr\" role=\"combobox\" type=\"button\"><span class=\"rt-SelectTriggerInner\"><span style=\"pointer-events:none\"></span></span><svg aria-hidden=\"true\" class=\"rt-SelectIcon\" fill=\"currentcolor\" height=\"9\" viewbox=\"0 0 9 9\" width=\"9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z\"></path></svg></button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> typing </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> List</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> MatchState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    cat_breed: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    animal_options: List[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"persian\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"siamese\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"maine coon\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"ragdoll\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"pug\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"corgi\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> match_demo</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">flex</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">match</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            MatchState.cat_breed,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            (</span><span style=\"color:#98C379\">\"persian\"</span><span style=\"color:#ABB2BF\">, rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Persian cat selected.\"</span><span style=\"color:#ABB2BF\">)),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            (</span><span style=\"color:#98C379\">\"siamese\"</span><span style=\"color:#ABB2BF\">, rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Siamese cat selected.\"</span><span style=\"color:#ABB2BF\">)),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            (</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"maine coon\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Maine Coon cat selected.\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            (</span><span style=\"color:#98C379\">\"ragdoll\"</span><span style=\"color:#ABB2BF\">, rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Ragdoll cat selected.\"</span><span style=\"color:#ABB2BF\">)),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Unknown cat breed selected.\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">select</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"persian\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"siamese\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"maine coon\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"ragdoll\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"pug\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"corgi\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">MatchState.cat_breed,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">MatchState.set_cat_breed,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        direction</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"column\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        gap</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"2\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div></article>"
  ]
}