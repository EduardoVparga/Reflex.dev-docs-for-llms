{
  "url": "https://reflex.dev/docs/getting-started/chatapp-tutorial/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"interactive-tutorial:-ai-chat-app\">Interactive Tutorial: AI Chat App</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">This tutorial will walk you through building an AI chat app with Reflex. This app is fairly complex, but don't worry - we'll break it down into small steps.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can find the full source code for this app <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://github.com/reflex-dev/reflex-chat\">here</a>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#what-you'll-learn\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"what-you'll-learn\">What You'll Learn</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this tutorial you'll learn how to:</p><ol class=\"css-1nbtsq0\">\n<li class=\"font-normal text-slate-12 mb-4\">Install <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex</code> and set up your development environment.</li>\n<li class=\"font-normal text-slate-12 mb-4\">Create components to define and style your UI.</li>\n<li class=\"font-normal text-slate-12 mb-4\">Use state to add interactivity to your app.</li>\n<li class=\"font-normal text-slate-12 mb-4\">Deploy your app to share with others.</li>\n</ol><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#setting-up-your-project\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"setting-up-your-project\">Setting up Your Project</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"css-10ddbmu\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-tzz23y\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:R1k4mkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-x6dm7o\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:Rk4mkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"css-170rups\"><p class=\"rt-Text css-56tzch\">Video: Example of Setting up the Chat App</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-5zj1nk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:Rk4mkml6:\" class=\"AccordionContent css-16eixt1\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:R1k4mkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We will start by creating a new project and setting up our development environment. First, create a new directory for your project and navigate to it.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">~ $ mkdir chatapp</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">~ $ cd chatapp</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Next, we will create a virtual environment for our project. This is optional, but recommended. In this example, we will use <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://docs.python.org/3/library/venv.html\">venv</a> to create our virtual environment.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">chatapp</span><span style=\"color:#ABB2BF\"> $ </span><span style=\"color:#98C379\">python3</span><span style=\"color:#D19A66\"> -m</span><span style=\"color:#98C379\"> venv</span><span style=\"color:#98C379\"> venv</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">$</span><span style=\"color:#98C379\"> source</span><span style=\"color:#98C379\"> venv/bin/activate</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now, we will install Reflex and create a new project. This will create a new directory structure in our project directory.</p><blockquote>\n<p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><strong>Note:</strong> When prompted to select a template, choose option 0 for a blank project.</p>\n</blockquote><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">chatapp</span><span style=\"color:#ABB2BF\"> $ </span><span style=\"color:#98C379\">pip</span><span style=\"color:#98C379\"> install</span><span style=\"color:#98C379\"> reflex</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">chatapp</span><span style=\"color:#ABB2BF\"> $ </span><span style=\"color:#98C379\">reflex</span><span style=\"color:#98C379\"> init</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">──────────────────────────────────</span><span style=\"color:#98C379\"> Initializing</span><span style=\"color:#98C379\"> chatapp</span><span style=\"color:#98C379\"> ───────────────────────────────────</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">Success:</span><span style=\"color:#98C379\"> Initialized</span><span style=\"color:#98C379\"> chatapp</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">chatapp</span><span style=\"color:#ABB2BF\"> $ </span><span style=\"color:#98C379\">ls</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">assets</span><span style=\"color:#98C379\">          chatapp</span><span style=\"color:#98C379\">         rxconfig.py</span><span style=\"color:#98C379\">     venv</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><div class=\"rt-Box css-1pg8bi\"></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can run the template app to make sure everything is working.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">chatapp</span><span style=\"color:#ABB2BF\"> $ </span><span style=\"color:#98C379\">reflex</span><span style=\"color:#98C379\"> run</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">───────────────────────────────────</span><span style=\"color:#98C379\"> Starting</span><span style=\"color:#98C379\"> Reflex</span><span style=\"color:#98C379\"> App</span><span style=\"color:#98C379\"> ───────────────────────────────────</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">Compiling:</span><span style=\"color:#98C379\">  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span><span style=\"color:#98C379\"> 100%</span><span style=\"color:#98C379\"> 1/1</span><span style=\"color:#98C379\"> 0:00:00</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">───────────────────────────────────────</span><span style=\"color:#98C379\"> App</span><span style=\"color:#98C379\"> Running</span><span style=\"color:#98C379\"> ───────────────────────────────────────</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">App</span><span style=\"color:#98C379\"> running</span><span style=\"color:#98C379\"> at:</span><span style=\"color:#98C379\"> http://localhost:3000</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><div class=\"rt-Box css-1pg8bi\"></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You should see your app running at <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"http://localhost:3000\">http://localhost:3000</a>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Reflex also starts the backend server which handles all the state management and communication with the frontend. You can test the backend server is running by navigating to <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"http://localhost:8000/ping\">http://localhost:8000/ping</a>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now that we have our project set up, in the next section we will start building our app!</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#basic-frontend\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"basic-frontend\">Basic Frontend</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Let's start with defining the frontend for our chat app. In Reflex, the frontend can be broken down into independent, reusable components. See the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/components/props/\">components docs</a> for more information.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#display-a-question-and-answer\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"display-a-question-and-answer\">Display A Question And Answer</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We will modify the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">index</code> function in <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chatapp/chatapp.py</code> file to return a component that displays a single question and answer.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box css-s2uf1z\">What is Reflex?</div><div class=\"rt-Box css-13brihr\">A way to build web apps in pure Python!</div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># chatapp.py</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">container</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"What is Reflex?\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">            # The user's question is on the right.</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"right\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"A way to build web apps in pure Python!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">            # The answer is on the left.</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"left\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Add state and page to the app.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Components can be nested inside each other to create complex layouts. Here we create a parent container that contains two boxes for the question and answer.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We also add some basic styling to the components. Components take in keyword arguments, called <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/components/props/\">props</a>, that modify the appearance and functionality of the component. We use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">text_align</code> prop to align the text to the left and right.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#reusing-components\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"reusing-components\">Reusing Components</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now that we have a component that displays a single question and answer, we can reuse it to display multiple questions and answers. We will move the component to a separate function <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">question_answer</code> and call it from the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">index</code> function.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box\"><div class=\"rt-Box css-56tzch\"><div class=\"rt-Box css-s2uf1z\">What is Reflex?</div><div class=\"rt-Box css-13brihr\">A way to build web apps in pure Python!</div></div><div class=\"rt-Box css-56tzch\"><div class=\"rt-Box css-s2uf1z\">What can I make with it?</div><div class=\"rt-Box css-13brihr\">Anything from a simple website to a complex web app!</div></div></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> qa</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">question</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">answer</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(question, </span><span style=\"color:#E06C75;font-style:italic\">text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"right\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(answer, </span><span style=\"color:#E06C75;font-style:italic\">text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"left\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        margin_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> chat</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    qa_pairs </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        (</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"What is Reflex?\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"A way to build web apps in pure Python!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        (</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"What can I make with it?\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Anything from a simple website to a complex web app!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        *[</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            qa</span><span style=\"color:#ABB2BF\">(question, answer)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            for</span><span style=\"color:#ABB2BF\"> question, answer </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> qa_pairs</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">container</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#61AFEF\">chat</span><span style=\"color:#ABB2BF\">())</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#chat-input\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"chat-input\">Chat Input</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now we want a way for the user to input a question. For this, we will use the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/forms/input/\">input</a> component to have the user add text and a <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/forms/button/\">button</a> component to submit the question.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box\"><div class=\"rt-Box css-56tzch\"><div class=\"rt-Box css-s2uf1z\">What is Reflex?</div><div class=\"rt-Box css-13brihr\">A way to build web apps in pure Python!</div></div><div class=\"rt-Box css-56tzch\"><div class=\"rt-Box css-s2uf1z\">What can I make with it?</div><div class=\"rt-Box css-13brihr\">Anything from a simple website to a complex web app!</div></div></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> action_bar</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ask a question\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Ask\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">container</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        chat</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        action_bar</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#styling\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"styling\">Styling</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Let's add some styling to the app. More information on styling can be found in the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/styling/overview/\">styling docs</a>. To keep our code clean, we will move the styling to a separate file <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chatapp/style.py</code>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># style.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Common styles for questions and answers.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">shadow </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"rgba(0, 0, 0, 0.15) 0px 2px 8px\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">chat_margin </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"20%\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">message_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    padding</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    border_radius</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"5px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    max_width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"30em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    display</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"inline-block\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Set specific styles for questions and answers.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">question_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> message_style </span><span style=\"color:#56B6C2\">|</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_left</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">chat_margin,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"gray\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">4</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">answer_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> message_style </span><span style=\"color:#56B6C2\">|</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_right</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">chat_margin,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"accent\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">8</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Styles for the action bar.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">input_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    border_width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    padding</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"350px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">button_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"accent\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We will import the styles in <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chatapp.py</code> and use them in the components. At this point, the app should look like this:</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex css-gmuwbf\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-center rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Box\"><div class=\"rt-Box css-s9uroe\"><div class=\"rt-Box css-s2uf1z\"><p class=\"rt-Text css-qh4hfy\">What is Reflex?</p></div><div class=\"rt-Box css-13brihr\"><p class=\"rt-Text css-1cgl0a6\">A way to build web apps in pure Python!</p></div></div><div class=\"rt-Box css-s9uroe\"><div class=\"rt-Box css-s2uf1z\"><p class=\"rt-Text css-qh4hfy\">What can I make with it?</p></div><div class=\"rt-Box css-13brihr\"><p class=\"rt-Text css-1cgl0a6\">Anything from a simple website to a complex web app!</p></div></div></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-16nxya7\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-1dw42wr\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># chatapp.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> chatapp </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> style</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> qa</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">question</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">answer</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(question, </span><span style=\"color:#E06C75;font-style:italic\">style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.question_style),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"right\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(answer, </span><span style=\"color:#E06C75;font-style:italic\">style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.answer_style),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"left\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        margin_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> chat</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    qa_pairs </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        (</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"What is Reflex?\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"A way to build web apps in pure Python!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        (</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"What can I make with it?\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Anything from a simple website to a complex web app!\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        *[</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            qa</span><span style=\"color:#ABB2BF\">(question, answer)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            for</span><span style=\"color:#ABB2BF\"> question, answer </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> qa_pairs</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> action_bar</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ask a question\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.input_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Ask\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.button_style),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            chat</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            action_bar</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"center\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The app is looking good, but it's not very useful yet! In the next section, we will add some functionality to the app.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#state\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"state\">State</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now let’s make the chat app interactive by adding state. The state is where we define all the variables that can change in the app and all the functions that can modify them. You can learn more about state in the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/state/overview/\">state docs</a>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#defining-state\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"defining-state\">Defining State</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We will create a new file called <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">state.py</code> in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chatapp</code> directory. Our state will keep track of the current question being asked and the chat history. We will also define an event handler <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">answer</code> which will process the current question and add the answer to the chat history.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # The current question being asked.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    question: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Keep track of the chat history as a list of (question, answer) tuples.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    chat_history: list[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> answer</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Our chatbot is not very smart right now...</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        answer </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"I don't know!\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.chat_history.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">((</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question, answer))</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#binding-state-to-components\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"binding-state-to-components\">Binding State to Components</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Now we can import the state in <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chatapp.py</code> and reference it in our frontend components. We will modify the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">chat</code> component to use the state instead of the current fixed questions and answers.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box\"></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-16nxya7\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-1dw42wr\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># chatapp.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> chatapp.state </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> State</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D19A66\">...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> chat</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            State.chat_history,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> messages</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#61AFEF\">qa</span><span style=\"color:#ABB2BF\">(messages[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">], messages[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D19A66\">...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> action_bar</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ask a question\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.set_question,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.input_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Ask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.answer,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.button_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Normal Python <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">for</code> loops don't work for iterating over state vars because these values can change and aren't known at compile time. Instead, we use the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/dynamic-rendering/foreach/\">foreach</a> component to iterate over the chat history.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We also bind the input's <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_change</code> event to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">set_question</code> event handler, which will update the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">question</code> state var while the user types in the input. We bind the button's <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> event to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">answer</code> event handler, which will process the question and add the answer to the chat history. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">set_question</code> event handler is a built-in implicitly defined event handler. Every base var has one. Learn more in the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/events/setters/\">events docs</a> under the Setters section.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#clearing-the-input\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"clearing-the-input\">Clearing the Input</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Currently the input doesn't clear after the user clicks the button. We can fix this by binding the value of the input to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">question</code>, with <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">value=State.question</code>, and clear it when we run the event handler for <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">answer</code>, with <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">self.question = ''</code>.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box\"></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-16nxya7\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\" type=\"text\" value=\"\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-1dw42wr\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># chatapp.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> action_bar</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.question,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ask a question\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.set_question,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.input_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Ask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.answer,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.button_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> answer</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Our chatbot is not very smart right now...</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    answer </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"I don't know!\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.chat_history.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">((</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question, answer))</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.question </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#streaming-text\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"streaming-text\">Streaming Text</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Normally state updates are sent to the frontend when an event handler returns. However, we want to stream the text from the chatbot as it is generated. We can do this by yielding from the event handler. See the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/events/yield-events/\">yield events docs</a> for more info.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Container rt-r-size-3 css-19midj6\"><div class=\"rt-ContainerInner\"><div class=\"rt-Box\"></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-16nxya7\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\" type=\"text\" value=\"\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-1dw42wr\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> asyncio</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D19A66\">...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">async</span><span style=\"color:#C678DD\"> def</span><span style=\"color:#61AFEF\"> answer</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Our chatbot is not very smart right now...</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    answer </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"I don't know!\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.chat_history.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">((</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question, </span><span style=\"color:#98C379\">\"\"</span><span style=\"color:#ABB2BF\">))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Clear the question input.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.question </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Yield here to clear the frontend input before continuing.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    yield</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    for</span><span style=\"color:#ABB2BF\"> i </span><span style=\"color:#C678DD\">in</span><span style=\"color:#56B6C2\"> range</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">len</span><span style=\"color:#ABB2BF\">(answer)):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Pause to show the streaming effect.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        await</span><span style=\"color:#ABB2BF\"> asyncio.</span><span style=\"color:#61AFEF\">sleep</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0.1</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Add one letter at a time to the output.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">][</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            answer[: i </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#D19A66\"> 1</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        yield</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In the next section, we will finish our chatbot by adding AI!</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#final-app\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"final-app\">Final App</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We will use OpenAI's API to give our chatbot some intelligence.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#configure-the-openai-api-key\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"configure-the-openai-api-key\">Configure the OpenAI API Key</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Ensure you have an active OpenAI subscription. Save your API key as an environment variable named <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">OPENAI_API_KEY</code>:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span>```bash</span></span>\n<span class=\"line\"><span>export OPENAI_API_KEY=\"your-api-key-here\"</span></span>\n<span class=\"line\"><span>```</span></span>\n<span class=\"line\"><span></span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Install the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">openai</code> pypi package:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span>```bash</span></span>\n<span class=\"line\"><span>pip install openai</span></span>\n<span class=\"line\"><span>```</span></span>\n<span class=\"line\"><span></span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#using-the-api\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"using-the-api\">Using the API</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We need to modify our event handler to send a request to the API.</p><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex css-gmuwbf\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-center rt-r-gap-3 rx-Stack css-1tehhj4\"><div class=\"rt-Box\"></div><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-16nxya7\"><input class=\"rt-reset rt-TextFieldInput\" placeholder=\"Ask a question\" spellcheck=\"false\" type=\"text\" value=\"\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button css-1dw42wr\" data-accent-color=\"\">Ask</button></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> os</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> openai </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> AsyncOpenAI</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">async</span><span style=\"color:#C678DD\"> def</span><span style=\"color:#61AFEF\"> answer</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Our chatbot has some brains now!</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    client </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#61AFEF\"> AsyncOpenAI</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        api_key</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">os.environ[</span><span style=\"color:#98C379\">\"OPENAI_API_KEY\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    session </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#ABB2BF\"> client.chat.completions.</span><span style=\"color:#61AFEF\">create</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        model</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"gpt-4o-mini\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        messages</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            {</span><span style=\"color:#98C379\">\"role\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"user\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"content\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question}</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        stop</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">None</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        temperature</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">0.7</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        stream</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Add to the answer as the chatbot responds.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    answer </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.chat_history.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">((</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question, answer))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Clear the question input.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.question </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Yield here to clear the frontend input before continuing.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    yield</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    async</span><span style=\"color:#C678DD\"> for</span><span style=\"color:#ABB2BF\"> item </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> session:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        if</span><span style=\"color:#56B6C2\"> hasattr</span><span style=\"color:#ABB2BF\">(item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta, </span><span style=\"color:#98C379\">\"content\"</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            if</span><span style=\"color:#ABB2BF\"> item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta.content </span><span style=\"color:#C678DD\">is</span><span style=\"color:#D19A66\"> None</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">                # presence of 'None' indicates the end of the response</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                break</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            answer </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#ABB2BF\"> item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta.content</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">][</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                answer,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            )</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            yield</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Finally, we have our chatbot!</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#final-code\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"final-code\">Final Code</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We wrote all our code in three files, which you can find below.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># chatapp.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> chatapp </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> style</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> chatapp.state </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> State</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> qa</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">question</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">answer</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(question, </span><span style=\"color:#E06C75;font-style:italic\">style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.question_style),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"right\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(answer, </span><span style=\"color:#E06C75;font-style:italic\">style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.answer_style),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            text_align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"left\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        margin_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> chat</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            State.chat_history,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            lambda</span><span style=\"color:#D19A66;font-style:italic\"> messages</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#61AFEF\">qa</span><span style=\"color:#ABB2BF\">(messages[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">], messages[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> action_bar</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.question,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ask a question\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.set_question,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.input_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Ask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.answer,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            style</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">style.button_style,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            chat</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            action_bar</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            align</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"center\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> os</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> openai </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> AsyncOpenAI</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # The current question being asked.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    question: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Keep track of the chat history as a list of (question, answer) tuples.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    chat_history: list[tuple[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    async</span><span style=\"color:#C678DD\"> def</span><span style=\"color:#61AFEF\"> answer</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Our chatbot has some brains now!</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        client </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#61AFEF\"> AsyncOpenAI</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            api_key</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">os.environ[</span><span style=\"color:#98C379\">\"OPENAI_API_KEY\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        session </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#ABB2BF\"> client.chat.completions.</span><span style=\"color:#61AFEF\">create</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            model</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"gpt-4o-mini\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            messages</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                {</span><span style=\"color:#98C379\">\"role\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"user\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"content\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question}</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            stop</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">None</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            temperature</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">0.7</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            stream</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Add to the answer as the chatbot responds.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        answer </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.chat_history.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">((</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.question, answer))</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Clear the question input.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.question </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Yield here to clear the frontend input before continuing.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        yield</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        async</span><span style=\"color:#C678DD\"> for</span><span style=\"color:#ABB2BF\"> item </span><span style=\"color:#C678DD\">in</span><span style=\"color:#ABB2BF\"> session:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            if</span><span style=\"color:#56B6C2\"> hasattr</span><span style=\"color:#ABB2BF\">(item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta, </span><span style=\"color:#98C379\">\"content\"</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                if</span><span style=\"color:#ABB2BF\"> item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta.content </span><span style=\"color:#C678DD\">is</span><span style=\"color:#D19A66\"> None</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">                    # presence of 'None' indicates the end of the response</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                    break</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                answer </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#ABB2BF\"> item.choices[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">].delta.content</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                    self</span><span style=\"color:#ABB2BF\">.chat_history[</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">][</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    answer,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                )</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                yield</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># style.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Common styles for questions and answers.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">shadow </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"rgba(0, 0, 0, 0.15) 0px 2px 8px\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">chat_margin </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"20%\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">message_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    padding</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    border_radius</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"5px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_y</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    max_width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"30em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    display</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"inline-block\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Set specific styles for questions and answers.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">question_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> message_style </span><span style=\"color:#56B6C2\">|</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_left</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">chat_margin,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"gray\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">4</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">answer_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> message_style </span><span style=\"color:#56B6C2\">|</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    margin_right</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">chat_margin,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"accent\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">8</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Styles for the action bar.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">input_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    border_width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    padding</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"0.5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"350px\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">button_style </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> dict</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"accent\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    box_shadow</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">shadow,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#next-steps\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"next-steps\">Next Steps</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Congratulations! You have built your first chatbot. From here, you can read through the rest of the documentations to learn about Reflex in more detail. The best way to learn is to build something, so try to build your own app using this as a starting point!</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/chatapp-tutorial/#one-more-thing\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"one-more-thing\">One More Thing</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">With our hosting service, you can deploy this app with a single command within minutes. Check out our <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/hosting/deploy-quick-start/\">Hosting Quick Start</a>.</p></article>"
  ]
}