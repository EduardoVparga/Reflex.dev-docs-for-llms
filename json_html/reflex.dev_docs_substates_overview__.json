{
  "url": "https://reflex.dev/docs/substates/overview/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"substates\">Substates</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Substates allow you to break up your state into multiple classes to make it more manageable. This is useful as your app\ngrows, as it allows you to think about each page as a separate entity. Substates also allow you to share common state\nresources, such as variables or event handlers.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">When a particular state class becomes too large, breaking it up into several substates can bring performance\nbenefits by only loading parts of the state that are used to handle a certain event.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/substates/overview/#multiple-states\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"multiple-states\">Multiple States</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">One common pattern is to create a substate for each page in your app.\nThis allows you to think about each page as a separate entity, and makes it easier to manage your code as your app grows.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">To create a substate, simply inherit from <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State</code> multiple times:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># index.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> IndexState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your main state here.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    data: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Hello World\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(IndexState.data)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># signup.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#61AFEF\"> SignupState</span><span style=\"color:#ABB2BF\">(rx.State):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your signup state here.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    username: </span><span style=\"color:#E06C75;font-style:italic\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    password: </span><span style=\"color:#E06C75;font-style:italic\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> signup</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#D19A66\">        ...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">@</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> signup_page</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SignupState.username),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SignupState.password),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># login.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#61AFEF\"> LoginState</span><span style=\"color:#ABB2BF\">(rx.State):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your login state here.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    username: </span><span style=\"color:#E06C75;font-style:italic\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    password: </span><span style=\"color:#E06C75;font-style:italic\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> login</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#D19A66\">        ...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">@</span><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">page</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> login_page</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">LoginState.username),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">LoginState.password),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Separating the states is purely a matter of organization. You can still access the state from other pages by importing the state class.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># index.py</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> signup </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> SignupState</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#D19A66\">...</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(IndexState.data),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SignupState.username),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SignupState.password),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/substates/overview/#state-inheritance\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"state-inheritance\">State Inheritance</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">A substate can also inherit from another substate other than <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State</code>, allowing you to create a hierarchy of states.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">For example, you can create a base state that defines variables and event handlers that are common to all pages in your app, such as the current logged in user.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> BaseState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your base state here.\"\"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    current_user: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> logout</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.current_user </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> LoginState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">BaseState</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Define your login state here.\"\"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    username: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    password: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> login</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">username</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">password</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # authenticate</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        authenticate</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">...</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Set the var on the parent state.</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.current_user </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> username</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can access the parent state properties from a child substate automatically.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/substates/overview/#accessing-arbitrary-states\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"accessing-arbitrary-states\">Accessing Arbitrary States</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">An event handler in a particular state can access and modify vars in another state instance by calling\nthe <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">get_state</code> async method and passing the desired state class. If the requested state is not already loaded,\nit will be loaded and deserialized on demand.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In the following example, the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">GreeterState</code> accesses the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">SettingsState</code> to get the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">salutation</code> and uses it\nto update the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">message</code> var.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Notably, the widget that sets the salutation does NOT have to load the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">GreeterState</code> when handling the\ninput <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_change</code> event, which improves performance.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><form class=\"Root css-8atqhb\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" id=\"name\" placeholder=\"Name\" spellcheck=\"false\"/></div><button aria-controls=\"radix-:Rkqcq6kml6:\" aria-expanded=\"false\" aria-haspopup=\"dialog\" class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-IconButton css-1vae7t2\" data-accent-color=\"\" data-state=\"closed\" type=\"button\"><svg class=\"lucide lucide-settings css-svt5ra\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z\"></path><circle cx=\"12\" cy=\"12\" r=\"3\"></circle></svg></button></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Submit</button></div></form><p class=\"rt-Text\"></p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> SettingsState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    salutation: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Hello\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> set_salutation_popover</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.popover.</span><span style=\"color:#61AFEF\">root</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.popover.</span><span style=\"color:#61AFEF\">trigger</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">icon_button</span><span style=\"color:#ABB2BF\">(rx.</span><span style=\"color:#61AFEF\">icon</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"settings\"</span><span style=\"color:#ABB2BF\">)),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.popover.</span><span style=\"color:#61AFEF\">content</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SettingsState.salutation,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">SettingsState.set_salutation,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> GreeterState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    message: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    async</span><span style=\"color:#C678DD\"> def</span><span style=\"color:#61AFEF\"> handle_submit</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B;font-style:italic\">        self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">form_data</span><span style=\"color:#ABB2BF\">: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, Any]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        settings </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> await</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">get_state</span><span style=\"color:#ABB2BF\">(SettingsState)</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.message </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">settings.salutation</span><span style=\"color:#D19A66\">}</span><span style=\"color:#D19A66\"> {</span><span style=\"color:#ABB2BF\">form_data[</span><span style=\"color:#98C379\">'name'</span><span style=\"color:#ABB2BF\">]</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">form</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Name\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">id</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"name\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">                    set_salutation_popover</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Submit\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            reset_on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">GreeterState.handle_submit,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(GreeterState.message),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/substates/overview/#performance-implications\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"performance-implications\">Performance Implications</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">When an event handler is called, Reflex will load the data not only for the substate containing\nthe event handler, but also all of its substates and parent states as well.\nIf a state has a large number of substates or contains a large amount of data, it can slow down processing\nof events associated with that state.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">For optimal performance, keep a flat structure with most substate classes directly inheriting from <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State</code>.\nOnly inherit from another state when the parent holds data that is commonly used by the substate.\nImplementing different parts of the app with separate, unconnected states ensures that only the necessary\ndata is loaded for processing events for a particular page or component.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Avoid defining computed vars inside a state that contains a large amount of data, as\nstates with computed vars are always loaded to ensure the values are recalculated.\nWhen using computed vars, it better to define them in a state that directly inherits from <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.State</code> and\ndoes not have other states inheriting from it, to avoid loading unnecessary data.</p></article>"
  ]
}