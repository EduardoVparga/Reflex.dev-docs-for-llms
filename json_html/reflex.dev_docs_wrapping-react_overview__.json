{
  "url": "https://reflex.dev/docs/wrapping-react/overview/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"wrapping-react\">Wrapping React</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">One of Reflex's most powerful features is the ability to wrap React components and take advantage of the vast ecosystem of React libraries.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If you want a specific component for your app but Reflex doesn't provide it, there's a good chance it's available as a React component. Search for it on <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://www.npmjs.com/\">npm</a>, and if it's there, you can use it in your Reflex app. You can also create your own local React components and wrap them in Reflex.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Once you wrap your component, you <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/custom-components/overview/\">publish it</a> to the Reflex library so that others can use it.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/wrapping-react/overview/#simple-example\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"simple-example\">Simple Example</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Simple components that don't have any interaction can be wrapped with just a few lines of code.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Below we show how to wrap the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://github.com/splinetool/react-spline\">Spline</a> library can be used to create 3D scenes and animations.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div style=\"width:100%;height:100%;overflow:hidden\"><canvas height=\"344\" style=\"display: block; width: 100%; height: 100%;\" width=\"686\"></canvas></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> Spline</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">Component</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"Spline component.\"\"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # The name of the npm package.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    library </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"@splinetool/react-spline\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Any additional libraries needed to use the component.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    lib_dependencies: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"@splinetool/runtime@1.5.5\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # The name of the component to use from the package.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    tag </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"Spline\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Spline is a default export from the module.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    is_default </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\"> True</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Any props that the component takes.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    scene: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Convenience function to create the Spline component.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">spline </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> Spline.create</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Use the Spline component in your app.</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#61AFEF\"> spline</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        scene</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"https://prod.spline.design/joLpOOYbGL-10EJ4/scene.splinecode\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/wrapping-react/overview/#colorpicker-example\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"colorpicker-example\">ColorPicker Example</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Similar to the Spline example we start with defining the library and tag. In this case the library is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">react-colorful</code> and the tag is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">HexColorPicker</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We also have a var <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code> which is the current color of the color picker.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Since this component has interaction we must specify any event triggers that the component takes. The color picker has a single trigger <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_change</code> to specify when the color changes. This trigger takes in a single argument <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color</code> which is the new color.</p><div class=\"rt-Box css-11yhr0l\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-1jn2rh7\">#db114b</h1><div class=\"react-colorful\"><div class=\"react-colorful__saturation\" style=\"background-color:hsl(0, 100%, 50%)\"><div aria-label=\"Color\" aria-valuetext=\"Saturation 0%, Brightness 0%\" class=\"react-colorful__interactive\" role=\"slider\" tabindex=\"0\"><div class=\"react-colorful__pointer react-colorful__saturation-pointer\" style=\"top:100%;left:0%\"><div class=\"react-colorful__pointer-fill\" style=\"background-color:hsl(0, 0%, 0%)\"></div></div></div></div><div class=\"react-colorful__hue react-colorful__last-control\"><div aria-label=\"Hue\" aria-valuemax=\"360\" aria-valuemin=\"0\" aria-valuenow=\"0\" class=\"react-colorful__interactive\" role=\"slider\" tabindex=\"0\"><div class=\"react-colorful__pointer react-colorful__hue-pointer\" style=\"top:50%;left:0%\"><div class=\"react-colorful__pointer-fill\" style=\"background-color:hsl(0, 100%, 50%)\"></div></div></div></div></div></div></div><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ColorPicker</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">Component</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    library </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"react-colorful\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    tag </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\"> \"HexColorPicker\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: rx.Var[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    on_change: rx.EventHandler[</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> color</span><span style=\"color:#ABB2BF\">: [color]]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">color_picker </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> ColorPicker.create</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ColorPickerState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    color: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"#db114b\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ColorPickerState.color, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"white\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">            color_picker</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ColorPickerState.set_color</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        background_color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ColorPickerState.color,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        padding</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        border_radius</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"1em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/wrapping-react/overview/#what-not-to-wrap\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"what-not-to-wrap\">What Not To Wrap</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">There are some libraries on npm that are not do not expose React components and therefore are very hard to wrap with Reflex.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">A library like <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://www.npmjs.com/package/@splinetool/runtime\">spline</a> below is going to be difficult to wrap with Reflex because it does not expose a React component.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> { </span><span style=\"color:#E06C75\">Application</span><span style=\"color:#ABB2BF\"> } </span><span style=\"color:#C678DD\">from</span><span style=\"color:#98C379\"> '@splinetool/runtime'</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// make sure you have a canvas in the body</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#E5C07B\"> canvas</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#E5C07B\"> document</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">getElementById</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">'canvas3d'</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">// start the application and load the scene</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">const</span><span style=\"color:#E5C07B\"> spline</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#C678DD\"> new</span><span style=\"color:#61AFEF\"> Application</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75\">canvas</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">spline</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">load</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">'https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode'</span><span style=\"color:#ABB2BF\">);</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You should look out for JSX, a syntax extension to JavaScript, which has angle brackets <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">(&lt;h1&gt;Hello, world!&lt;/h1&gt;)</code>. If you see JSX, it's likely that the library is a React component and can be wrapped with Reflex.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">If the library does not expose a react component you need to try and find a JS React wrapper for the library, such as <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://www.npmjs.com/package/@splinetool/react-spline\">react-spline</a>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#E06C75\"> Spline</span><span style=\"color:#C678DD\"> from</span><span style=\"color:#98C379\"> '@splinetool/react-spline'</span><span style=\"color:#ABB2BF\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">export</span><span style=\"color:#C678DD\"> default</span><span style=\"color:#C678DD\"> function</span><span style=\"color:#61AFEF\"> App</span><span style=\"color:#ABB2BF\">() {</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">  return</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    &lt;</span><span style=\"color:#E06C75\">div</span><span style=\"color:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">      &lt;</span><span style=\"color:#E5C07B\">Spline</span><span style=\"color:#D19A66;font-style:italic\"> scene</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\"</span><span style=\"color:#ABB2BF\"> /&gt;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    &lt;/</span><span style=\"color:#E06C75\">div</span><span style=\"color:#ABB2BF\">&gt;</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">  );</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">}</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In the next page, we will go step by step through a more complex example of wrapping a React component.</p></article>"
  ]
}