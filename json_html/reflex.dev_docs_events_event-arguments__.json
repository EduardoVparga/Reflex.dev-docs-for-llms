{
  "url": "https://reflex.dev/docs/events/event-arguments/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"event-arguments\">Event Arguments</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The event handler signature needs to match the event trigger definition argument count. If the event handler takes two arguments, the event trigger must be able to provide two arguments.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is a simple example:</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-1tehhj4\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-134ffhx\">50</h1><span aria-disabled=\"false\" class=\"rt-SliderRoot rt-r-size-2 rt-variant-surface css-8atqhb\" data-orientation=\"horizontal\" dir=\"ltr\" style=\"--radix-slider-thumb-transform:translateX(-50%)\" width=\"100%\"><span class=\"rt-SliderTrack\" data-orientation=\"horizontal\"><span class=\"rt-SliderRange\" data-orientation=\"horizontal\" style=\"left:0%;right:60%\"></span></span><span style=\"transform: var(--radix-slider-thumb-transform); position: absolute; left: calc(40% + 0.188333px);\"><span aria-orientation=\"horizontal\" aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"40\" class=\"rt-SliderThumb\" data-orientation=\"horizontal\" data-radix-collection-item=\"\" role=\"slider\" style=\"\" tabindex=\"0\"></span></span></span></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> EventArgStateSlider</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    value: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 50</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> set_end</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">value</span><span style=\"color:#ABB2BF\">: list[</span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">]):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.value </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> value[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> slider_max_min_step</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(EventArgStateSlider.value),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">slider</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            default_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">40</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_value_commit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EventArgStateSlider.set_end,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The event trigger here is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_value_commit</code> and it is called when the value changes at the end of an interaction. This event trigger passes one argument, which is the value of the slider. The event handler which is triggered by the event trigger must therefore take one argument, which is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">value</code> here.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is a form example:</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><form class=\"Root css-8atqhb\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface\"><input class=\"rt-reset rt-TextFieldInput\" name=\"name\" placeholder=\"Name\" spellcheck=\"false\"/></div><label class=\"rt-Text rt-r-size-2\"><div class=\"rt-Flex rt-r-gap-2\"><button aria-checked=\"false\" class=\"rt-reset rt-BaseCheckboxRoot rt-CheckboxRoot rt-r-size-2 rt-variant-surface\" data-state=\"unchecked\" role=\"checkbox\" type=\"button\" value=\"on\"></button><input aria-hidden=\"true\" name=\"check\" style=\"transform: translateX(-100%); position: absolute; pointer-events: none; opacity: 0; margin: 0px; width: 2.5px; height: 3.13333px;\" tabindex=\"-1\" type=\"checkbox\" value=\"on\"/>Checked</div></label><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\" type=\"submit\">Submit</button></div></form><span class=\"rt-Separator rt-r-orientation-horizontal rt-r-size-4 css-1ezhfzu\" data-accent-color=\"gray\"></span>",
    "<h1 class=\"rt-Heading rt-r-size-6 css-134ffhx\">Results</h1><p class=\"rt-Text\">{}</p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> EventArgState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    form_data: </span><span style=\"color:#56B6C2\">dict</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> {}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> handle_submit</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">form_data</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">dict</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"\"\"Handle the form submit.\"\"\"</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.form_data </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> form_data</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> event_arg_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">form</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    placeholder</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Name\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"name\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">checkbox</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Checked\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"check\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Submit\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">type</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"submit\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EventArgState.handle_submit,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            reset_on_submit</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">divider</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Results\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(EventArgState.form_data.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this example the event trigger is the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_submit</code> event of the form. The event handler is <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">handle_submit</code>. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_submit</code> event trigger passes one argument, the form data as a dictionary, to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">handle_submit</code> event handler. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">handle_submit</code> event handler must take one argument because the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_submit</code> event trigger passes one argument.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">When the number of args accepted by an EventHandler differs from that provided by the event trigger, an <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">EventHandlerArgMismatch</code> error will be raised.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/events/event-arguments/#pass-additional-arguments-to-event-handlers\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"pass-additional-arguments-to-event-handlers\">Pass Additional Arguments to Event Handlers</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In some use cases, you want to pass additional arguments to your event handlers. To do this you can bind an event trigger to a lambda, which can call your event handler with the arguments you want.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Try typing a color in an input below and clicking away from it to change the color of the input.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-oyt2b6\"><input class=\"rt-reset rt-TextFieldInput\" spellcheck=\"false\" value=\"rgba(245,168,152)\"/></div><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-6ypt6n\"><input class=\"rt-reset rt-TextFieldInput\" spellcheck=\"false\" value=\"MediumSeaGreen\"/></div><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-lvcej0\"><input class=\"rt-reset rt-TextFieldInput\" spellcheck=\"false\" value=\"#DEADE3\"/></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ArgState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    colors: list[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"rgba(245,168,152)\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"MediumSeaGreen\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">        \"#DEADE3\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> change_color</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">color</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">index</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.colors[index] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> color</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> event_arguments_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            default_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_blur</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> c</span><span style=\"color:#ABB2BF\">: ArgState.</span><span style=\"color:#61AFEF\">change_color</span><span style=\"color:#ABB2BF\">(c, </span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            default_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_blur</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> c</span><span style=\"color:#ABB2BF\">: ArgState.</span><span style=\"color:#61AFEF\">change_color</span><span style=\"color:#ABB2BF\">(c, </span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            default_value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_blur</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> c</span><span style=\"color:#ABB2BF\">: ArgState.</span><span style=\"color:#61AFEF\">change_color</span><span style=\"color:#ABB2BF\">(c, </span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            bg</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">ArgState.colors[</span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this case, in we want to pass two arguments to the event handler <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">change_color</code>, the color and the index of the color to change.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_blur</code> event trigger passes the text of the input as an argument to the lambda, and the lambda calls the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">change_color</code> event handler with the text and the index of the input.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">When the number of args accepted by a lambda differs from that provided by the event trigger, an <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">EventFnArgMismatch</code> error will be raised.</p><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd96kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R596kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">Event Handler Parameters should provide type annotations.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R596kml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd96kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/events/event-arguments/#events-with-partial-arguments-(advanced)\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"events-with-partial-arguments-(advanced)\">Events with Partial Arguments (Advanced)</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><em>Added in v0.5.0</em></p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Event arguments in Reflex are passed positionally. Any additional arguments not\npassed to an EventHandler will be filled in by the event trigger when it is\nfired.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The following two code samples are equivalent:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Use a lambda to pass event trigger args to the EventHandler.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    on_blur</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\">lambda</span><span style=\"color:#D19A66;font-style:italic\"> v</span><span style=\"color:#ABB2BF\">: MyState.</span><span style=\"color:#61AFEF\">handle_update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"field1\"</span><span style=\"color:#ABB2BF\">, v)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># Create a partial that passes event trigger args for any args not provided to the EventHandler.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">on_blur</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">MyState.</span><span style=\"color:#61AFEF\">handle_update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"field1\"</span><span style=\"color:#ABB2BF\">))</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre></article>"
  ]
}