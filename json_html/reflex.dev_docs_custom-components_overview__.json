{
  "url": "https://reflex.dev/docs/custom-components/overview/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"custom-components-overview\">Custom Components Overview</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Reflex users create many components of their own: ready to use high level components, or nicely wrapped React components. With <strong>Custom Components</strong>, the community can easily share these components now.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Release <strong>0.4.3</strong> introduces a series of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component</code> commands that help developers wrap react components, test, and publish them as python packages. As shown in the image below, there are already a few custom components published on PyPI, such as <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex-spline</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex-webcam</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Check out the custom components gallery <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/custom-components/\">here</a>.</p><div class=\"rt-Flex css-gmuwbf\"><img class=\"css-1xu25lw\" src=\"/custom_components/pypi_reflex_custom_components.png\"/></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/custom-components/overview/#prerequisites-for-publishing\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"prerequisites-for-publishing\">Prerequisites for Publishing</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In order to publish a Python package, an account is required with a python package index, for example, PyPI. The documentation to create accounts and generate API tokens can be found on their websites. For a quick reference, check out our <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/custom-components/prerequisites-for-publishing/\">Prerequisites for Publishing</a> page.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/custom-components/overview/#steps-to-publishing\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"steps-to-publishing\">Steps to Publishing</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Follow these steps to publish the custom component as a python package:</p><ol class=\"css-1nbtsq0\">\n<li class=\"font-normal text-slate-12 mb-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component init</code>: creates a new custom component project from templates.</li>\n<li class=\"font-normal text-slate-12 mb-4\">dev and test: developer implements and tests the custom component.</li>\n<li class=\"font-normal text-slate-12 mb-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component build</code>: builds the package.</li>\n<li class=\"font-normal text-slate-12 mb-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">twine upload</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">uv publish</code>: uploads the package to a python package index.</li>\n</ol><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/custom-components/overview/#initialization\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"initialization\">Initialization</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">reflex</span><span style=\"color:#98C379\"> component</span><span style=\"color:#98C379\"> init</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">First create a new folder for your custom component project, for example <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color_picker</code>. The package name will be <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex-color-picker</code>. The prefix <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex-</code> is intentionally added for all custom components for easy search on PyPI. If you prefer a particular name for the package, you can either change it manually in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">pyproject.toml</code> file or add the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">--library-name</code> option in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component init</code> command initially.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Run <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component init</code>, and a set of files and folders will be created in the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color_picker</code> folder. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">pyproject.toml</code> file is the configuration file for the project. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">custom_components</code> folder is where the custom component implementation is. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color_picker_demo</code> folder is a demo Reflex app that uses the custom component. If this is the first time of creating python packages, it is encouraged to browse through all the files (there are not that many) to understand the structure of the project.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">color_picker/</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">├──</span><span style=\"color:#98C379\"> pyproject.toml</span><span style=\"color:#ABB2BF\">            &lt;</span><span style=\"color:#98C379\">-</span><span style=\"color:#98C379\"> Configuration</span><span style=\"color:#98C379\"> file</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">├──</span><span style=\"color:#98C379\"> README.md</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">├──</span><span style=\"color:#98C379\"> .gitignore</span><span style=\"color:#ABB2BF\">                &lt;</span><span style=\"color:#98C379\">-</span><span style=\"color:#98C379\"> Exclude</span><span style=\"color:#98C379\"> dist/</span><span style=\"color:#98C379\"> and</span><span style=\"color:#98C379\"> metadata</span><span style=\"color:#98C379\"> folders</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">├──</span><span style=\"color:#98C379\"> custom_components/</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">│</span><span style=\"color:#98C379\">   └──</span><span style=\"color:#98C379\"> reflex_color_picker/</span><span style=\"color:#ABB2BF\">  &lt;</span><span style=\"color:#98C379\">-</span><span style=\"color:#98C379\"> Custom</span><span style=\"color:#98C379\"> component</span><span style=\"color:#98C379\"> source</span><span style=\"color:#98C379\"> directory</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">│</span><span style=\"color:#98C379\">       ├──</span><span style=\"color:#98C379\"> color_picker.py</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">│</span><span style=\"color:#98C379\">       └──</span><span style=\"color:#98C379\"> __init__.py</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">└──</span><span style=\"color:#98C379\"> color_picker_demo/</span><span style=\"color:#ABB2BF\">        &lt;</span><span style=\"color:#98C379\">-</span><span style=\"color:#98C379\"> Demo</span><span style=\"color:#98C379\"> Reflex</span><span style=\"color:#98C379\"> app</span><span style=\"color:#98C379\"> directory</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    └──</span><span style=\"color:#98C379\"> assets/</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        color_picker_demo/</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        requirements.txt</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        rxconfig.py</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/custom-components/overview/#develop-and-test\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"develop-and-test\">Develop and Test</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">After finishing the custom component implementation, the user is encouraged to fully test it before publishing. The generated Reflex demo app <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">color_picker_demo</code> is a good place to start. It is a regular Reflex app prefilled with imports and usage of this component. During the init, the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">custom_component</code> folder is installed locally in editable mode, so a developer can incrementally develop and test with ease. The changes in component implementation are automatically reflected in the demo app.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/custom-components/overview/#publish\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"publish\">Publish</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#61AFEF\">reflex</span><span style=\"color:#98C379\"> component</span><span style=\"color:#98C379\"> build</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Once you're ready to publish your package, run <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component build</code> to build the package. The command builds the distribution files if they are not already built. The end result is a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dist</code> folder containing the distribution files. The user does not need to do anything manually with these distribution files.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In order to publish these files as a Python package, you need to use a publishing utility. Any would work, but we recommend either <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://twine.readthedocs.io/en/stable/\">Twine</a> or (uv)[<a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://docs.astral.sh/uv/guides/package/#publishing-your-package\">https://docs.astral.sh/uv/guides/package/#publishing-your-package</a>]. Make sure to keep your package version in pyproject.toml updated.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can also share your components with the rest of the community at our website using the command <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex component share</code>. See you there!</p></article>"
  ]
}