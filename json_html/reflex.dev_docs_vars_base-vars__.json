{
  "url": "https://reflex.dev/docs/vars/base-vars/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"base-vars\">Base Vars</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Vars are any fields in your app that may change over time. A Var is directly\nrendered into the frontend of the app.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Base vars are defined as fields in your State class.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">They can have a preset default value. If you don't provide a default value, you\nmust provide a type annotation.</p><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd36kml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R536kml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">State Vars should provide type annotations.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R536kml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd36kml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex css-gmuwbf\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">AAPL</h1><p class=\"rt-Text css-504jus\">Current Price: $150</p><p class=\"rt-Text css-bjcoli\">Change: 4%</p></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> TickerState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ticker: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"AAPL\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    price: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"$150\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> ticker_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(TickerState.ticker, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Current Price: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">TickerState.price</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                font_size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"md\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Change: 4%\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this example <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">ticker</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">price</code> are base vars in the app, which can be modified at runtime.</p><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-18dvnhc\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rd4mkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-1i28d60\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:R54mkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-18lx3gk\"><svg class=\"lucide lucide-triangle-alert css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\"></path><path d=\"M12 9v4\"></path><path d=\"M12 17h.01\"></path></svg></div><div class=\"css-1tb50ij\"><p class=\"rt-Text css-56tzch\">Vars must be JSON serializable.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-18lx3gk\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:R54mkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rd4mkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/base-vars/#accessing-state-variables-on-different-pages\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"accessing-state-variables-on-different-pages\">Accessing state variables on different pages</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">State is just a python class and so can be defined on one page and then imported and used on another. Below we define <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">TickerState</code> class on the page <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">state.py</code> and then import it and use it on the page <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">index.py</code>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># state.py</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> TickerState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ticker: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"AAPL\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    price: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"$150\"</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#7F848E;font-style:italic\"># index.py</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">from</span><span style=\"color:#ABB2BF\"> .state </span><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> TickerState</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> ticker_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">center</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(TickerState.ticker, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Current Price: reflex___state____state__flexdown___modules____a4e3de79f19b87b4f4fce3d5f729c6b6b225d8d968533932d2e49adf411f2694____ticker_state.price\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                font_size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"md\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Change: 4%\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/base-vars/#backend-only-vars\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"backend-only-vars\">Backend-only Vars</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Any Var in a state class that starts with an underscore is considered backend\nonly and will not be synchronized with the frontend. Data associated with a\nspecific session that is not directly rendered on the frontend should be stored\nin a backend-only var to reduce network traffic and improve performance.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">They have the advantage that they don't need to be JSON serializable, however\nthey must still be cloudpickle-able to be used with redis in prod mode. They are\nnot directly renderable on the frontend, and may be used to store sensitive\nvalues that should not be sent to the client.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">For example, a backend-only var is used to store a large data structure which is\nthen paged to the frontend using cached vars.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Prev</button><p class=\"rt-Text\">Page 1 / 10</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Next</button><p class=\"rt-Text\">Page Size</p><div class=\"rt-TextFieldRoot rt-r-size-2 rt-variant-surface css-1y23ycr\"><input class=\"rt-reset rt-TextFieldInput\" spellcheck=\"false\" type=\"text\" value=\"10\"/></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Generate More</button></div><ul class=\"css-i4p2sg\"><p class=\"rt-Text\">_backend[0] = 74</p><p class=\"rt-Text\">_backend[1] = 80</p><p class=\"rt-Text\">_backend[2] = 8</p><p class=\"rt-Text\">_backend[3] = 82</p><p class=\"rt-Text\">_backend[4] = 36</p><p class=\"rt-Text\">_backend[5] = 99</p><p class=\"rt-Text\">_backend[6] = 55</p><p class=\"rt-Text\">_backend[7] = 93</p><p class=\"rt-Text\">_backend[8] = 39</p><p class=\"rt-Text\">_backend[9] = 53</p></ul></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> numpy </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> np</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> BackendVarState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    _backend: np.ndarray </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> np.</span><span style=\"color:#61AFEF\">array</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        [random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">) </span><span style=\"color:#C678DD\">for</span><span style=\"color:#ABB2BF\"> _ </span><span style=\"color:#C678DD\">in</span><span style=\"color:#56B6C2\"> range</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">)]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    offset: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    limit: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 10</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">cache</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; list[</span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">]:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">            int</span><span style=\"color:#ABB2BF\">(x)  </span><span style=\"color:#7F848E;font-style:italic\"># explicit cast to int</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            for</span><span style=\"color:#ABB2BF\"> x </span><span style=\"color:#C678DD\">in</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">._backend[</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">                self</span><span style=\"color:#ABB2BF\">.offset : </span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">cache</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> page_number</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            (</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">//</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit)</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">            +</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">            +</span><span style=\"color:#ABB2BF\"> (</span><span style=\"color:#D19A66\">1</span><span style=\"color:#C678DD\"> if</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">%</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit </span><span style=\"color:#C678DD\">else</span><span style=\"color:#D19A66\"> 0</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">var</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">cache</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> total_pages</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">) -&gt; </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#56B6C2\"> len</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">._backend) </span><span style=\"color:#56B6C2\">//</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#ABB2BF\"> (</span></span>\n<span class=\"line\"><span style=\"color:#D19A66\">            1</span><span style=\"color:#C678DD\"> if</span><span style=\"color:#56B6C2\"> len</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">._backend) </span><span style=\"color:#56B6C2\">%</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit </span><span style=\"color:#C678DD\">else</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> prev_page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> max</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">-</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit, </span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> next_page</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        if</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit </span><span style=\"color:#56B6C2\">&lt;</span><span style=\"color:#56B6C2\"> len</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">._backend):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            self</span><span style=\"color:#ABB2BF\">.offset </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.limit</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> generate_more</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">._backend </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> np.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">            self</span><span style=\"color:#ABB2BF\">._backend,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                for</span><span style=\"color:#ABB2BF\"> _ </span><span style=\"color:#C678DD\">in</span><span style=\"color:#56B6C2\"> range</span><span style=\"color:#ABB2BF\">(random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">))</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> set_limit</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">value</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.limit </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> int</span><span style=\"color:#ABB2BF\">(value)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> backend_var_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Prev\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">BackendVarState.prev_page,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Page </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">BackendVarState.page_number</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\"> / </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">BackendVarState.total_pages</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Next\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">BackendVarState.next_page,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Page Size\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">input</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"5em\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">BackendVarState.limit,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">BackendVarState.set_limit,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Generate More\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">BackendVarState.generate_more,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">list</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                BackendVarState.page,</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                lambda</span><span style=\"color:#D19A66;font-style:italic\"> x</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66;font-style:italic\">ix</span><span style=\"color:#ABB2BF\">: rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                    f</span><span style=\"color:#98C379\">\"_backend[</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ix </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#ABB2BF\"> BackendVarState.offset</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">] = </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">x</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/base-vars/#using-rx.field-/-rx.field-to-improve-type-hinting-for-vars\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"using-rx.field-/-rx.field-to-improve-type-hinting-for-vars\">Using rx.field / rx.Field to improve type hinting for vars</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">When defining state variables you can use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.Field[T]</code> to annotate the variable's type. Then, you can initialize the variable using <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.field(default_value)</code>, where <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">default_value</code> is an instance of type <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">T</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">This approach makes the variable's type explicit, aiding static analysis tools in type checking. In addition, it shows you what methods are allowed to modify the variable in your frontend code, as they are listed in the type hint.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Below are two examples:</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    x: rx.Field[</span><span style=\"color:#56B6C2\">bool</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">field</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">False</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> flip</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.x </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#C678DD\"> not</span><span style=\"color:#E5C07B\"> self</span><span style=\"color:#ABB2BF\">.x</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@app</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">add_page</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Click me\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.flip),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(State.x),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">~</span><span style=\"color:#ABB2BF\">State.x),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.x</code>, as it is typed correctly as a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">boolean</code> var, gets better code completion, i.e. here we get options such as <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">to_string()</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">equals()</code>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    x: rx.Field[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, list[</span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">]]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">field</span><span style=\"color:#ABB2BF\">({})</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@app</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">add_page</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(State.x.</span><span style=\"color:#61AFEF\">values</span><span style=\"color:#ABB2BF\">()[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">][</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.x</code>, as it is typed correctly as a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code> of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">str</code> to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code> of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">int</code> var, gets better code completion, i.e. here we get options such as <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">contains()</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">keys()</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">values()</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">items()</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">merge()</code>.</p></article>"
  ]
}