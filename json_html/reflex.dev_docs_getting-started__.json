{
  "url": "https://reflex.dev/docs/getting-started/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"introduction\">Introduction</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\"><strong>Reflex</strong> is an open-source framework for quickly building beautiful, interactive web applications in <strong>pure Python</strong>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#goals\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"goals\">Goals</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><div class=\"rt-Box css-1a41tr7\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-1b1pepc\"><p class=\"rt-Text css-8atqhb\"><span class=\"rt-Text css-in3yi3\"> Pure Python</span></p><div class=\"rt-Box css-8atqhb\"><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Use Python for everything. Don't worry about learning a new language.</p></div><p class=\"rt-Text css-8atqhb\"><span class=\"rt-Text css-in3yi3\"> Easy to Learn</span></p><div class=\"rt-Box css-8atqhb\"><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Build and share your first app in minutes. No web development experience required.</p></div><p class=\"rt-Text css-8atqhb\"><span class=\"rt-Text css-in3yi3\"> Full Flexibility</span></p><div class=\"rt-Box css-8atqhb\"><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Remain as flexible as traditional web frameworks. Reflex is easy to use, yet allows for advanced use cases.</p>\n<p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Build anything from small data science apps to large, multi-page websites. <strong>This entire site was built and deployed with Reflex!</strong></p></div><p class=\"rt-Text css-8atqhb\"><span class=\"rt-Text css-in3yi3\"> Batteries Included</span></p><div class=\"rt-Box css-8atqhb\"><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">No need to reach for a bunch of different tools. Reflex handles the user interface, server-side logic, and deployment of your app.</p></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#an-example:-make-it-count\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"an-example:-make-it-count\">An example: Make it count</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here, we go over a simple counter app that lets the user count up or down.</p><div class=\"rt-Box css-9tf9ac\" id=\"counter\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-4 rx-Stack css-zcxndt\"><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"ruby\">Decrement</button>",
    "<h1 class=\"rt-Heading rt-r-size-6 css-1y0eise\">0</h1><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"grass\">Increment</button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here is the full code for this example:</p><div class=\"rt-TabsRoot text-slate-12 font-normal css-1ysbne9\" data-orientation=\"horizontal\" dir=\"ltr\"><div aria-orientation=\"horizontal\" class=\"rt-BaseTabList rt-TabsList rt-r-size-2 css-1cor1d5\" data-orientation=\"horizontal\" role=\"tablist\" style=\"outline: none;\" tabindex=\"0\"><button aria-controls=\"radix-:r27:-content-tab1\" aria-selected=\"true\" class=\"rt-reset rt-BaseTabListTrigger rt-TabsTrigger tab-style css-1eafhys\" data-orientation=\"horizontal\" data-radix-collection-item=\"\" data-state=\"active\" id=\"radix-:r27:-trigger-tab1\" role=\"tab\" tabindex=\"-1\" type=\"button\"><span class=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">Frontend</span><span class=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">Frontend</span></button><button aria-controls=\"radix-:r27:-content-tab2\" aria-selected=\"false\" class=\"rt-reset rt-BaseTabListTrigger rt-TabsTrigger tab-style css-1eafhys\" data-orientation=\"horizontal\" data-radix-collection-item=\"\" data-state=\"inactive\" id=\"radix-:r27:-trigger-tab2\" role=\"tab\" tabindex=\"-1\" type=\"button\"><span class=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">Backend</span><span class=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">Backend</span></button><button aria-controls=\"radix-:r27:-content-tab3\" aria-selected=\"false\" class=\"rt-reset rt-BaseTabListTrigger rt-TabsTrigger tab-style css-1eafhys\" data-orientation=\"horizontal\" data-radix-collection-item=\"\" data-state=\"inactive\" id=\"radix-:r27:-trigger-tab3\" role=\"tab\" tabindex=\"-1\" type=\"button\"><span class=\"rt-BaseTabListTriggerInner rt-TabsTriggerInner\">Page</span><span class=\"rt-BaseTabListTriggerInnerHidden rt-TabsTriggerInnerHidden\">Page</span></button></div><div aria-labelledby=\"radix-:r27:-trigger-tab1\" class=\"rt-TabsContent pt-4 css-10qvqtq\" data-orientation=\"horizontal\" data-state=\"active\" id=\"radix-:r27:-content-tab1\" role=\"tabpanel\" style=\"animation-duration: 0s;\" tabindex=\"0\"><div class=\"css-1408fvk\"><p class=\"rt-Text css-56tzch\">The frontend is built declaratively using Reflex components. Components are compiled down to JS and served to the users browser, therefore:</p>\n<ul class=\"css-1usfqyd\">\n<li class=\"css-jzlc08\">\n<p class=\"rt-Text css-56tzch\">Only use Reflex components, vars, and var operations when building your UI. Any other logic should be put in your <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">State</code> (backend).</p>\n</li>\n<li class=\"css-jzlc08\">\n<p class=\"rt-Text css-56tzch\">Use <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">rx.cond</code> and <code class=\"rt-reset rt-Code rt-variant-soft\" data-accent-color=\"\">rx.foreach</code> (replaces if statements and for loops), for creating dynamic UIs.</p>\n</li>\n</ul></div></div><div aria-labelledby=\"radix-:r27:-trigger-tab2\" class=\"rt-TabsContent pt-4 css-10qvqtq\" data-orientation=\"horizontal\" data-state=\"inactive\" hidden=\"\" id=\"radix-:r27:-content-tab2\" role=\"tabpanel\" tabindex=\"0\"></div><div aria-labelledby=\"radix-:r27:-trigger-tab3\" class=\"rt-TabsContent pt-4 css-10qvqtq\" data-orientation=\"horizontal\" data-state=\"inactive\" hidden=\"\" id=\"radix-:r27:-content-tab3\" role=\"tabpanel\" tabindex=\"0\"></div></div><div class=\"rt-Box css-9tf9ac\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Box w-full flex flex-col\"><div class=\"rt-Box code-block !bg-transparent !border-none css-kx58t0\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx </span></span></code></pre></div></div><div class=\"rt-Box code-block css-1lghqxf\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    count: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> increment</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> decrement</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">-=</span><span style=\"color:#D19A66\"> 1</span></span></code></pre></div></div><div class=\"rt-Box code-block css-qcg97k\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Decrement\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"ruby\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.decrement,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(State.count, </span><span style=\"color:#E06C75;font-style:italic\">font_size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"2em\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Increment\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"grass\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.increment,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        spacing</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"4\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div></div><div class=\"rt-Box code-block css-1lghqxf\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span></code></pre></div></div></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#the-structure-of-a-reflex-app\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"the-structure-of-a-reflex-app\">The Structure of a Reflex App</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Let's break this example down.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#import\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"import\">Import</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> reflex </span><span style=\"color:#C678DD\">as</span><span style=\"color:#ABB2BF\"> rx</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We begin by importing the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reflex</code> package (aliased to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx</code>). We reference Reflex objects as <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.*</code> by convention.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#state\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"state\">State</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    count: </span><span style=\"color:#56B6C2\">int</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 0</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The state defines all the variables (called <strong><a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/vars/base-vars/\">vars</a></strong>) in an app that can change, as well as the functions (called <strong><a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"#event-handlers\">event_handlers</a></strong>) that change them.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Here our state has a single var, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">count</code>, which holds the current value of the counter. We initialize it to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">0</code>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#event-handlers\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"event-handlers\">Event Handlers</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> increment</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">+=</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> decrement</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">    self</span><span style=\"color:#ABB2BF\">.count </span><span style=\"color:#56B6C2\">-=</span><span style=\"color:#D19A66\"> 1</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Within the state, we define functions, called <strong>event handlers</strong>, that change the state vars.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Event handlers are the only way that we can modify the state in Reflex.\nThey can be called in response to user actions, such as clicking a button or typing in a text box.\nThese actions are called <strong>events</strong>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Our counter app has two event handlers, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">increment</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">decrement</code>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#user-interface-(ui)\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"user-interface-(ui)\">User Interface (UI)</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Decrement\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"ruby\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.decrement,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(State.count, </span><span style=\"color:#E06C75;font-style:italic\">font_size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"2em\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"Increment\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"grass\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.increment,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">        spacing</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"4\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">This function defines the app's user interface.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We use different components such as <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.hstack</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.button</code>, and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.heading</code> to build the frontend. Components can be nested to create complex layouts, and can be styled using the full power of CSS.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Reflex comes with <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/library/\">50+ built-in components</a> to help you get started.\nWe are actively adding more components. Also, it's easy to <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/wrapping-react/overview/\">wrap your own React components</a>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(State.count, </span><span style=\"color:#E06C75;font-style:italic\">font_size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"2em\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Components can reference the app's state vars.\nThe <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">rx.heading</code> component displays the current value of the counter by referencing <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.count</code>.\nAll components that reference state will reactively update whenever the state changes.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"Decrement\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"ruby\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">    on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">State.decrement,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Components interact with the state by binding events triggers to event handlers.\nFor example, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> is an event that is triggered when a user clicks a component.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The first button in our app binds its <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> event to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.decrement</code> event handler. Similarly the second button binds <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.increment</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In other words, the sequence goes like this:</p><ul class=\"css-1usfqyd\">\n<li class=\"font-normal text-slate-12 mb-4\">User clicks \"increment\" on the UI.</li>\n<li class=\"font-normal text-slate-12 mb-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">on_click</code> event is triggered.</li>\n<li class=\"font-normal text-slate-12 mb-4\">Event handler <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.increment</code> is called.</li>\n<li class=\"font-normal text-slate-12 mb-4\"><code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.count</code> is incremented.</li>\n<li class=\"font-normal text-slate-12 mb-4\">UI updates to reflect the new value of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.count</code>.</li>\n</ul><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#add-pages\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"add-pages\">Add pages</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Next we define our app and add the counter component to the base route.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">app </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">App</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">app.</span><span style=\"color:#61AFEF\">add_page</span><span style=\"color:#ABB2BF\">(index)</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"https://reflex.dev/docs/getting-started/introduction/#next-steps\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"next-steps\">Next Steps</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">🎉 And that's it!</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We've created a simple, yet fully interactive web app in pure Python.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">By continuing with our documentation, you will learn how to building awesome apps with Reflex.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">For a glimpse of the possibilities, check out these resources:</p><ul class=\"css-1usfqyd\">\n<li class=\"font-normal text-slate-12 mb-4\">For a more real-world example, check out either the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/getting-started/dashboard-tutorial/\">dashboard tutorial</a> or the <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"/docs/getting-started/chatapp-tutorial/\">chatapp tutorial</a>.</li>\n<li class=\"font-normal text-slate-12 mb-4\">We have bots that can answer questions and generate Reflex code for you. Check them out in #ask-ai in our <a class=\"rt-Text rt-reset rt-Link rt-underline-always css-1io25ou\" data-accent-color=\"\" href=\"https://discord.gg/T5WSbC2YtQ\">Discord</a>!</li>\n</ul></article>"
  ]
}