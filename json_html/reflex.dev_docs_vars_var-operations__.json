{
  "url": "https://reflex.dev/docs/vars/var-operations/\n",
  "sections": [
    "<h1 class=\"rt-Heading rt-r-size-6 font-x-large lg:font-xx-large scroll-m-[5rem] mt-4\" id=\"var-operations\">Var Operations</h1><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Var operations transform the placeholder representation of the value on the\nfrontend and provide a way to perform basic operations on the Var without having\nto define a computed var.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Within your frontend components, you cannot use arbitrary Python functions on\nthe state vars. For example, the following code will <strong>not work.</strong></p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> State</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> index</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # This will be compiled before runtime, before `State.number` has a known value.</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">    # Since `float` is not a valid var operation, this will throw an error.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">float</span><span style=\"color:#ABB2BF\">(State.number))</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">This is because we compile the frontend to Javascript, but the value of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">State.number</code>\nis only known at runtime.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In this example below we use a var operation to concatenate a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">string</code> with a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">var</code>, meaning we do not have to do in within state as a computed var.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-6 css-134ffhx\">I just bought a bunch of DOGE</h1><p class=\"rt-Text\">DOGE is going to the moon!</p><button aria-autocomplete=\"none\" aria-controls=\"radix-:R1p46kml6:\" aria-expanded=\"false\" class=\"rt-reset rt-SelectTrigger rt-r-size-2 rt-variant-surface\" data-state=\"closed\" dir=\"ltr\" role=\"combobox\" type=\"button\"><span class=\"rt-SelectTriggerInner\"><span style=\"pointer-events:none\">DOGE</span></span><svg aria-hidden=\"true\" class=\"rt-SelectIcon\" fill=\"currentcolor\" height=\"9\" viewbox=\"0 0 9 9\" width=\"9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z\"></path></svg></button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">coins </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#98C379\">\"BTC\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"ETH\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"LTC\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"DOGE\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> VarSelectState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    selected: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"DOGE\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_operations_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Using a var operation to concatenate a string with a var.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"I just bought a bunch of \"</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">            +</span><span style=\"color:#ABB2BF\"> VarSelectState.selected</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Using an f-string to interpolate a var.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">VarSelectState.selected</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\"> is going to the moon!\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">select</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            coins,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">VarSelectState.selected,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">VarSelectState.set_selected,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><div class=\"css-116ytrl\" data-orientation=\"vertical\" data-variant=\"classic\"><div class=\"AccordionItem css-1kyhe5f\" data-orientation=\"vertical\" data-state=\"closed\">",
    "<h3 class=\"AccordionHeader css-k008qs\" data-orientation=\"vertical\" data-state=\"closed\"><button aria-controls=\"radix-:Rq4mkml6:\" aria-expanded=\"false\" class=\"AccordionTrigger css-opwgoy\" data-orientation=\"vertical\" data-radix-collection-item=\"\" data-state=\"closed\" id=\"radix-:Ra4mkml6:\" type=\"button\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-2 rx-Stack css-bkjhwu\"><div class=\"rt-Box css-1ioup9u\"><svg class=\"lucide lucide-circle-check css-1yx2zam\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><path d=\"m9 12 2 2 4-4\"></path></svg></div><div class=\"css-fssxhv\"><p class=\"rt-Text css-56tzch\">Vars support many common operations.</p></div><div class=\"rt-Flex css-17xejub\"></div><svg class=\"lucide lucide-chevron-down AccordionChevron css-1ioup9u\" fill=\"none\" height=\"24\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m6 9 6 6 6-6\"></path></svg></div></button></h3><div aria-labelledby=\"radix-:Ra4mkml6:\" class=\"AccordionContent css-14qn398\" data-orientation=\"vertical\" data-state=\"closed\" hidden=\"\" id=\"radix-:Rq4mkml6:\" role=\"region\" style=\"--radix-accordion-content-height: var(--radix-collapsible-content-height); --radix-accordion-content-width: var(--radix-collapsible-content-width);\"></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#supported-operations\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"supported-operations\">Supported Operations</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Var operations allow us to change vars on the front-end without having to create more computed vars on the back-end in the state.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Some simple examples are the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">==</code> var operator, which is used to check if two vars are equal and the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">to_string()</code> var operator, which is used to convert a var to a string.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">\"Banana\"is my favorite fruit!</p><button aria-autocomplete=\"none\" aria-controls=\"radix-:R196mkml6:\" aria-expanded=\"false\" class=\"rt-reset rt-SelectTrigger rt-r-size-2 rt-variant-surface\" data-state=\"closed\" dir=\"ltr\" role=\"combobox\" type=\"button\"><span class=\"rt-SelectTriggerInner\"><span style=\"pointer-events:none\">Apple</span></span><svg aria-hidden=\"true\" class=\"rt-SelectIcon\" fill=\"currentcolor\" height=\"9\" viewbox=\"0 0 9 9\" width=\"9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0.135232 3.15803C0.324102 2.95657 0.640521 2.94637 0.841971 3.13523L4.5 6.56464L8.158 3.13523C8.3595 2.94637 8.6759 2.95657 8.8648 3.15803C9.0536 3.35949 9.0434 3.67591 8.842 3.86477L4.84197 7.6148C4.64964 7.7951 4.35036 7.7951 4.15803 7.6148L0.158031 3.86477C-0.0434285 3.67591 -0.0536285 3.35949 0.135232 3.15803Z\"></path></svg></button><p class=\"rt-Text\">The selected fruit is not equal to the favorite fruit.</p></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#ABB2BF\">fruits </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#98C379\">\"Apple\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"Banana\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"Orange\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"Mango\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> EqualsState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    selected: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Apple\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    favorite: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"Banana\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_equals_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            EqualsState.favorite.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">            +</span><span style=\"color:#98C379\"> \"is my favorite fruit!\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">select</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            fruits,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EqualsState.selected,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            on_change</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">EqualsState.set_selected,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            EqualsState.selected </span><span style=\"color:#56B6C2\">==</span><span style=\"color:#ABB2BF\"> EqualsState.favorite,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"The selected fruit is equal to the favorite fruit!\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"The selected fruit is not equal to the favorite fruit.\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#negate,-absolute-and-length\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"negate,-absolute-and-length\">Negate, Absolute and Length</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">-</code> operator is used to get the negative version of the var. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">abs()</code> operator is used to get the absolute value of the var. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">.length()</code> operator is used to get the length of a list var.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">The number: 0</h1><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Negated:<span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">0</span></p><p class=\"rt-Text\">Absolute:<span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"blue\">0</span></p><p class=\"rt-Text\">Numbers seen:<span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"red\">0</span></p></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Update</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> random</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> OperState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    numbers_seen: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> []</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.numbers_seen.</span><span style=\"color:#61AFEF\">append</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">self</span><span style=\"color:#ABB2BF\">.number)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_operation_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            f</span><span style=\"color:#98C379\">\"The number: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">OperState.number</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Negated:\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                    -</span><span style=\"color:#ABB2BF\">OperState.number,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Absolute:\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                    abs</span><span style=\"color:#ABB2BF\">(OperState.number),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"blue\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Numbers seen:\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    OperState.numbers_seen.</span><span style=\"color:#61AFEF\">length</span><span style=\"color:#ABB2BF\">(),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">                    color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Update\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">OperState.update),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#comparisons-and-mathematical-operators\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"comparisons-and-mathematical-operators\">Comparisons and Mathematical Operators</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">All of the comparison operators are used as expected in python. These include <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">==</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">!=</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">&gt;</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">&gt;=</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">&lt;</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">&lt;=</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">There are operators to add two vars <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">+</code>, subtract two vars <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">-</code>, multiply two vars <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">*</code> and raise a var to a power <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">pow()</code>.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TableRoot rt-r-size-2 rt-variant-ghost css-8atqhb\"><div class=\"rt-ScrollAreaRoot\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><table class=\"rt-TableRootTable\"><thead class=\"rt-TableHeader\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Integer 1</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Integer 2</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Operation</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Outcome</th></tr></thead><tbody class=\"rt-TableBody\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 == Int 2</td><td class=\"rt-TableCell\">true</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 != Int 2</td><td class=\"rt-TableCell\">false</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 &gt; Int 2</td><td class=\"rt-TableCell\">false</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 &gt;= Int 2</td><td class=\"rt-TableCell\">true</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 &lt; Int 2 </td><td class=\"rt-TableCell\">false</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 &lt;= Int 2</td><td class=\"rt-TableCell\">true</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 + Int 2</td><td class=\"rt-TableCell\">0</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 - Int 2</td><td class=\"rt-TableCell\">0</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">Int 1 * Int 2</td><td class=\"rt-TableCell\">0</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">0</th><td class=\"rt-TableCell\">0</td><td class=\"rt-TableCell\">pow(Int 1, Int2)</td><td class=\"rt-TableCell\">1</td></tr></tbody></table></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Update</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> random</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> CompState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number_1: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number_2: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number_1 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number_2 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#56B6C2\">-</span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_comparison_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.table.</span><span style=\"color:#61AFEF\">root</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">header</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Integer 1\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Integer 2\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Operation\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Outcome\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">body</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 == Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            ==</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 != Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            !=</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 &gt; Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            &gt;</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 &gt;= Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            &gt;=</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_2,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 &lt; Int 2 \"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            &lt;</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 &lt;= Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            &lt;=</span><span style=\"color:#ABB2BF\"> CompState.number_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 + Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">(CompState.number_1 </span><span style=\"color:#56B6C2\">+</span><span style=\"color:#ABB2BF\"> CompState.number_2)</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 - Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">CompState.number_1 </span><span style=\"color:#56B6C2\">-</span><span style=\"color:#ABB2BF\"> CompState.number_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 * Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">CompState.number_1 </span><span style=\"color:#56B6C2\">*</span><span style=\"color:#ABB2BF\"> CompState.number_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        CompState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(CompState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"pow(Int 1, Int2)\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#56B6C2\">pow</span><span style=\"color:#ABB2BF\">(CompState.number_1, CompState.number_2)</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Update\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">CompState.update),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#true-division,-floor-division-and-remainder\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"true-division,-floor-division-and-remainder\">True Division, Floor Division and Remainder</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The operator <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">/</code> represents true division. The operator <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">//</code> represents floor division. The operator <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">%</code> represents the remainder of the division.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TableRoot rt-r-size-2 rt-variant-ghost css-8atqhb\"><div class=\"rt-ScrollAreaRoot\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><table class=\"rt-TableRootTable\"><thead class=\"rt-TableHeader\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Integer 1</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Integer 2</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Operation</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Outcome</th></tr></thead><tbody class=\"rt-TableBody\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">3.5</th><td class=\"rt-TableCell\">1.4</td><td class=\"rt-TableCell\">Int 1 / Int 2</td><td class=\"rt-TableCell\">2.5</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">3.5</th><td class=\"rt-TableCell\">1.4</td><td class=\"rt-TableCell\">Int 1 // Int 2</td><td class=\"rt-TableCell\">2</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">3.5</th><td class=\"rt-TableCell\">1.4</td><td class=\"rt-TableCell\">Int 1 % Int 2</td><td class=\"rt-TableCell\">0.7000000000000002</td></tr></tbody></table></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Update</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> random</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> DivState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number_1: </span><span style=\"color:#56B6C2\">float</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 3.5</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number_2: </span><span style=\"color:#56B6C2\">float</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> 1.4</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number_1 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> round</span><span style=\"color:#ABB2BF\">(random.</span><span style=\"color:#61AFEF\">uniform</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">5.1</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">9.9</span><span style=\"color:#ABB2BF\">), </span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number_2 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#56B6C2\"> round</span><span style=\"color:#ABB2BF\">(random.</span><span style=\"color:#61AFEF\">uniform</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0.1</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">4.9</span><span style=\"color:#ABB2BF\">), </span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_div_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.table.</span><span style=\"color:#61AFEF\">root</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">header</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Integer 1\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Integer 2\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Operation\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Outcome\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">body</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        DivState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(DivState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 / Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">DivState.number_1 </span><span style=\"color:#56B6C2\">/</span><span style=\"color:#ABB2BF\"> DivState.number_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        DivState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(DivState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 // Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">DivState.number_1 </span><span style=\"color:#56B6C2\">//</span><span style=\"color:#ABB2BF\"> DivState.number_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        DivState.number_1</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(DivState.number_2),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Int 1 % Int 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                        f</span><span style=\"color:#98C379\">\"</span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">DivState.number_1 </span><span style=\"color:#56B6C2\">%</span><span style=\"color:#ABB2BF\"> DivState.number_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Update\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">DivState.update),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#and,-or-and-not\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"and,-or-and-not\">And, Or and Not</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In Reflex the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">&amp;</code> operator represents the logical AND when used in the front end. This means that it returns true only when both conditions are true simultaneously.\nThe <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">|</code> operator represents the logical OR when used in the front end. This means that it returns true when either one or both conditions are true.\nThe <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">~</code> operator is used to invert a var. It is used on a var of type <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">bool</code> and is equivalent to the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">not</code> operator.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-TableRoot rt-r-size-2 rt-variant-ghost css-8atqhb\"><div class=\"rt-ScrollAreaRoot\" dir=\"ltr\" style=\"position:relative;--radix-scroll-area-corner-width:0px;--radix-scroll-area-corner-height:0px\"><style>[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}</style><div class=\"rt-ScrollAreaViewport\" data-radix-scroll-area-viewport=\"\" style=\"overflow: scroll;\"><div style=\"min-width:100%;display:table\"><table class=\"rt-TableRootTable\"><thead class=\"rt-TableHeader\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Var 1</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Var 2</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Operation</th><th class=\"rt-TableCell rt-TableColumnHeaderCell\" scope=\"col\">Outcome</th></tr></thead><tbody class=\"rt-TableBody\"><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">true</th><td class=\"rt-TableCell\">true</td><td class=\"rt-TableCell\">Logical AND (&amp;)</td><td class=\"rt-TableCell\">true</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">true</th><td class=\"rt-TableCell\">true</td><td class=\"rt-TableCell\">Logical OR (|)</td><td class=\"rt-TableCell\">true</td></tr><tr class=\"rt-TableRow\"><th class=\"rt-TableCell rt-TableRowHeaderCell\" scope=\"row\">true</th><td class=\"rt-TableCell\">true</td><td class=\"rt-TableCell\">The invert of Var 1 (~)</td><td class=\"rt-TableCell\">false</td></tr></tbody></table></div></div><div class=\"rt-ScrollAreaViewportFocusRing\"></div></div></div><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Update</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> random</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> LogicState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    var_1: </span><span style=\"color:#56B6C2\">bool</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> True</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    var_2: </span><span style=\"color:#56B6C2\">bool</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#D19A66\"> True</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.var_1 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">choice</span><span style=\"color:#ABB2BF\">([</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">False</span><span style=\"color:#ABB2BF\">])</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.var_2 </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">choice</span><span style=\"color:#ABB2BF\">([</span><span style=\"color:#D19A66\">True</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">False</span><span style=\"color:#ABB2BF\">])</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_logical_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.table.</span><span style=\"color:#61AFEF\">root</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">header</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Var 1\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Var 2\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"Operation\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">column_header_cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Outcome\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.table.</span><span style=\"color:#61AFEF\">body</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_1.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_2.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Logical AND (&amp;)\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            LogicState.var_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            &amp;</span><span style=\"color:#ABB2BF\"> LogicState.var_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_1.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_2.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Logical OR (|)\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                            LogicState.var_1</span></span>\n<span class=\"line\"><span style=\"color:#56B6C2\">                            |</span><span style=\"color:#ABB2BF\"> LogicState.var_2</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        ).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.table.</span><span style=\"color:#61AFEF\">row</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">row_header_cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_1.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        LogicState.var_2.</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                        \"The invert of Var 1 (~)\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    rx.table.</span><span style=\"color:#61AFEF\">cell</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                        (</span><span style=\"color:#56B6C2\">~</span><span style=\"color:#ABB2BF\">LogicState.var_1).</span><span style=\"color:#61AFEF\">to_string</span><span style=\"color:#ABB2BF\">()</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            width</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"100%\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Update\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">LogicState.update),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#contains,-reverse-and-join\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"contains,-reverse-and-join\">Contains, Reverse and Join</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The 'in' operator is not supported for Var types, we must use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">Var.contains()</code> instead. When we use <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">contains</code>, the var must be of type: <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">dict</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code>, <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">tuple</code> or <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">str</code>.\n<code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">contains</code> checks if a var contains the object that we pass to it as an argument.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">reverse</code> operation to reverse a list var. The var must be of type <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code>.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Finally we use the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">join</code> operation to join a list var into a string.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">List 1: 1,2,3,4,6</h1><p class=\"rt-Text\">List 1 Contains 3: true</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">List 2: 7,8,9,10</h1><p class=\"rt-Text\">Reverse List 2: 10,9,8,7</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">List 3: p,y,t,h,o,n</h1><p class=\"rt-Text\">List 3 Joins: python</p></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ListsState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    list_1: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#D19A66\">1</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">2</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">3</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">4</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">6</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    list_2: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#D19A66\">7</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">8</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">9</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    list_3: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#98C379\">\"p\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"y\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"t\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"h\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"o\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#98C379\">\"n\"</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_list_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 1: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_1</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 1 Contains 3: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_1.</span><span style=\"color:#61AFEF\">contains</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">3</span><span style=\"color:#ABB2BF\">)</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 2: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Reverse List 2: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_2.</span><span style=\"color:#61AFEF\">reverse</span><span style=\"color:#ABB2BF\">()</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 3: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_3</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 3 Joins: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">ListsState.list_3.</span><span style=\"color:#61AFEF\">join</span><span style=\"color:#ABB2BF\">()</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#lower,-upper,-split\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"lower,-upper,-split\">Lower, Upper, Split</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">lower</code> operator converts a string var to lowercase. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">upper</code> operator converts a string var to uppercase. The <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">split</code> operator splits a string var into a list.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">List 1: PYTHON is FUN</h1><p class=\"rt-Text\">List 1 Lower Case: python is fun</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-3 css-134ffhx\">List 2: react is hard</h1><p class=\"rt-Text\">List 2 Upper Case: REACT IS HARD</p><p class=\"rt-Text\">Split String 2: r,e,a,c,t, ,i,s, ,h,a,r,d</p></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> StringState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    string_1: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"PYTHON is FUN\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    string_2: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#98C379\"> \"react is hard\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_string_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 1: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">StringState.string_1</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 1 Lower Case: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">StringState.string_1.</span><span style=\"color:#61AFEF\">lower</span><span style=\"color:#ABB2BF\">()</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 2: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">StringState.string_2</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"3\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"List 2 Upper Case: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">StringState.string_2.</span><span style=\"color:#61AFEF\">upper</span><span style=\"color:#ABB2BF\">()</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">                f</span><span style=\"color:#98C379\">\"Split String 2: </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">StringState.string_2.</span><span style=\"color:#61AFEF\">split</span><span style=\"color:#ABB2BF\">()</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#get-item-(indexing)\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"get-item-(indexing)\">Get Item (Indexing)</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Indexing is only supported for strings, lists, tuples, dicts, and dataframes. To index into a state var strict type annotations are required.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> GetItemState1</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    list_1: </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#56B6C2\"> =</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#D19A66\">50</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">20</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> get_item_error_1</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">progress</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">GetItemState1.list_1[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">])</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">In the code above you would expect to index into the first index of the list_1 state var. In fact the code above throws the error: <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">Invalid var passed for prop value, expected type &lt;class 'int'&gt;, got value of type typing.Any.</code> This is because the type of the items inside the list have not been clearly defined in the state. To fix this you change the list_1 definition to <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list_1: list[int] = [50, 10, 20]</code></p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"50\" aria-valuetext=\"50%\" class=\"rt-ProgressRoot rt-r-size-2 rt-variant-surface css-8atqhb\" data-max=\"100\" data-state=\"loading\" data-value=\"50\" role=\"progressbar\" style=\"--progress-value:50\"><div class=\"rt-ProgressIndicator\" data-max=\"100\" data-state=\"loading\" data-value=\"50\"></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> GetItemState1</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    list_1: list[</span><span style=\"color:#56B6C2\">int</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span><span style=\"color:#D19A66\">50</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">10</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">20</span><span style=\"color:#ABB2BF\">]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> get_item_error_1</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">progress</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E06C75;font-style:italic\">value</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">GetItemState1.list_1[</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">])</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#using-with-foreach\">",
    "<h3 class=\"rt-Heading rt-r-size-6 font-large scroll-m-[5rem] mt-4\" id=\"using-with-foreach\">Using with Foreach</h3><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-4 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Errors frequently occur when using indexing and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">foreach</code>.</p><pre><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ProjectsState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    projects: List[</span><span style=\"color:#56B6C2\">dict</span><span style=\"color:#ABB2BF\">] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Next.js\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Prisma\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Tailwind\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"MySQL\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Python\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Flask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> get_badge</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">technology</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        technology, </span><span style=\"color:#E06C75;font-style:italic\">variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> project_item</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">project</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">dict</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(project[</span><span style=\"color:#98C379\">\"technologies\"</span><span style=\"color:#ABB2BF\">], get_badge)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> failing_projects_example</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(ProjectsState.projects, project_item)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span>\n<span class=\"line\"></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></pre><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The code above throws the error <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">TypeError: Could not foreach over var of type Any. (If you are trying to foreach over a state var, add a type annotation to the var.)</code></p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We must change <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects: list[dict]</code> =&gt; <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">projects: list[dict[str, list]]</code> because while projects is annotated, the item in project[\"technologies\"] is not.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Box\"><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Next.js</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Prisma</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Tailwind</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">MySQL</span></div></div><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Python</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Flask</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Google Cloud</span><span class=\"rt-reset rt-Badge rt-r-size-1 rt-variant-soft\" data-accent-color=\"green\">Docker</span></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ProjectsState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    projects: list[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">list</span><span style=\"color:#ABB2BF\">]] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Next.js\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Prisma\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Tailwind\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"MySQL\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">            \"technologies\"</span><span style=\"color:#ABB2BF\">: [</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Python\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Flask\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Google Cloud\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                \"Docker\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ]</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> projects_example</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> get_badge</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">technology</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">badge</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            technology, </span><span style=\"color:#E06C75;font-style:italic\">variant</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"soft\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color_scheme</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> project_item</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">project</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#56B6C2\">dict</span><span style=\"color:#ABB2BF\">) -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                    project[</span><span style=\"color:#98C379\">\"technologies\"</span><span style=\"color:#ABB2BF\">], get_badge</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                )</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(ProjectsState.projects, project_item)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">The previous example had only a single type for each of the dictionaries <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">keys</code> and <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">values</code>. For complex multi-type data, you need to use a dataclass, as shown below.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Box\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Ariana Grande</p><p class=\"rt-Text\">30</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">arianagrande.com</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">https://es.wikipedia.org/wiki/Ariana_Grande</p></div></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><div class=\"rt-Flex rt-r-fd-row rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">Gal Gadot</p><p class=\"rt-Text\">38</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">http://www.galgadot.com/</p></div><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\"><p class=\"rt-Text\">https://es.wikipedia.org/wiki/Gal_Gadot</p></div></div></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> dataclasses</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">@dataclasses</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">dataclass</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> ActressType</span><span style=\"color:#ABB2BF\">:</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    actress_name: </span><span style=\"color:#56B6C2\">str</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    age: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    pages: list[dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> MultiDataTypeState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">    \"\"\"The app state.\"\"\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    actresses: list[ActressType] </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> [</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ActressType</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            actress_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Ariana Grande\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            age</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">30</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            pages</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                {</span><span style=\"color:#98C379\">\"url\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"arianagrande.com\"</span><span style=\"color:#ABB2BF\">},</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                    \"url\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"https://es.wikipedia.org/wiki/Ariana_Grande\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">        ActressType</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            actress_name</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"Gal Gadot\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            age</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#D19A66\">38</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            pages</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">[</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                {</span><span style=\"color:#98C379\">\"url\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"http://www.galgadot.com/\"</span><span style=\"color:#ABB2BF\">},</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                {</span></span>\n<span class=\"line\"><span style=\"color:#98C379\">                    \"url\"</span><span style=\"color:#ABB2BF\">: </span><span style=\"color:#98C379\">\"https://es.wikipedia.org/wiki/Gal_Gadot\"</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                },</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ],</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    ]</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> actresses_example</span><span style=\"color:#ABB2BF\">() -&gt; rx.Component:</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> showpage</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">page</span><span style=\"color:#ABB2BF\">: dict[</span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#56B6C2\">str</span><span style=\"color:#ABB2BF\">]):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(page[</span><span style=\"color:#98C379\">\"url\"</span><span style=\"color:#ABB2BF\">]),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> showlist</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66;font-style:italic\">item</span><span style=\"color:#ABB2BF\">: ActressType):</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">        return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">hstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(item.actress_name),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">                rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(item.age),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(item.pages, showpage),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        )</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">box</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">foreach</span><span style=\"color:#ABB2BF\">(MultiDataTypeState.actresses, showlist)</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Setting the type of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">actresses</code> to be <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">actresses: list[dict[str,str]]</code> would fail as it cannot be understood that the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">value</code> for the <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">pages key</code> is actually a <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">list</code>.</p><a class=\"rt-Text rt-reset rt-Link rt-underline-none flex flex-row items-center gap-6 hover:!text-violet-11 text-slate-12 cursor-pointer mb-2 transition-colors group css-1macts\" data-accent-color=\"\" href=\"/docs/vars/var-operations/#combine-multiple-var-operations\">",
    "<h2 class=\"rt-Heading rt-r-size-6 font-large lg:font-x-large scroll-m-[5rem] mt-8\" id=\"combine-multiple-var-operations\">Combine Multiple Var Operations</h2><svg class=\"lucide lucide-link !text-violet-11 invisible transition-[visibility_0.075s_ease-out] group-hover:visible mt-8 css-svt5ra\" fill=\"none\" height=\"18\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71\"></path><path d=\"M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71\"></path></svg></a><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">You can also combine multiple var operations together, as seen in the next example.</p><div class=\"rt-Box py-4 gap-4 flex flex-col w-full\"><div class=\"rt-Box flex flex-col p-6 rounded-xl overflow-x-auto border border-slate-4 bg-slate-2 items-center justify-center w-full\"><div class=\"rt-Flex rt-r-fd-column rt-r-ai-start rt-r-gap-3 rx-Stack css-zcxndt\">",
    "<h1 class=\"rt-Heading rt-r-size-5 css-134ffhx\">The number is 0</h1><p class=\"rt-Text css-bjcoli\">Even</p><button class=\"rt-reset rt-BaseButton rt-r-size-2 rt-variant-solid rt-Button\" data-accent-color=\"\">Update</button></div></div><div class=\"rt-Box relative mb-4\"><div class=\"rt-Box code-block css-1islnds\"><div><pre class=\"shiki one-dark-pro\" style=\"background-color:#282c34;color:#abb2bf\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#C678DD\">import</span><span style=\"color:#ABB2BF\"> random</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">class</span><span style=\"color:#E5C07B\"> VarNumberState</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B\">rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#E5C07B\">State</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    number: </span><span style=\"color:#56B6C2\">int</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#61AFEF\">    @rx</span><span style=\"color:#ABB2BF\">.</span><span style=\"color:#61AFEF\">event</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    def</span><span style=\"color:#61AFEF\"> update</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#E5C07B;font-style:italic\">self</span><span style=\"color:#ABB2BF\">):</span></span>\n<span class=\"line\"><span style=\"color:#E5C07B\">        self</span><span style=\"color:#ABB2BF\">.number </span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\"> random.</span><span style=\"color:#61AFEF\">randint</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#D19A66\">0</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#D19A66\">100</span><span style=\"color:#ABB2BF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#C678DD\">def</span><span style=\"color:#61AFEF\"> var_number_example</span><span style=\"color:#ABB2BF\">():</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">    return</span><span style=\"color:#ABB2BF\"> rx.</span><span style=\"color:#61AFEF\">vstack</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">heading</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#C678DD\">            f</span><span style=\"color:#98C379\">\"The number is </span><span style=\"color:#D19A66\">{</span><span style=\"color:#ABB2BF\">VarNumberState.number</span><span style=\"color:#D19A66\">}</span><span style=\"color:#98C379\">\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#E06C75;font-style:italic\">            size</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"5\"</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#7F848E;font-style:italic\">        # Var operations can be composed for more complex expressions.</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">cond</span><span style=\"color:#ABB2BF\">(</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            VarNumberState.number </span><span style=\"color:#56B6C2\">%</span><span style=\"color:#D19A66\"> 2</span><span style=\"color:#56B6C2\"> ==</span><span style=\"color:#D19A66\"> 0</span><span style=\"color:#ABB2BF\">,</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Even\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"green\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">            rx.</span><span style=\"color:#61AFEF\">text</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Odd\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">color</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#98C379\">\"red\"</span><span style=\"color:#ABB2BF\">),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        ),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">        rx.</span><span style=\"color:#61AFEF\">button</span><span style=\"color:#ABB2BF\">(</span><span style=\"color:#98C379\">\"Update\"</span><span style=\"color:#ABB2BF\">, </span><span style=\"color:#E06C75;font-style:italic\">on_click</span><span style=\"color:#56B6C2\">=</span><span style=\"color:#ABB2BF\">VarNumberState.update),</span></span>\n<span class=\"line\"><span style=\"color:#ABB2BF\">    )</span></span></code></pre></div><button class=\"css-kobh7h\"><svg class=\"lucide lucide-copy css-cqk0y8\" fill=\"none\" height=\"16\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><rect height=\"14\" rx=\"2\" ry=\"2\" width=\"14\" x=\"8\" y=\"8\"></rect><path d=\"M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2\"></path></svg></button></div></div></div><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">We could have made a computed var that returns the parity of <code class=\"rt-reset rt-Code rt-variant-soft code-style\" data-accent-color=\"\">number</code>, but\nit can be simpler just to use a var operation instead.</p><p class=\"rt-Text font-normal text-slate-12 mb-4 leading-7\">Var operations may be generally chained to make compound expressions, however\nsome complex transformations not supported by var operations must use computed vars\nto calculate the value on the backend.</p></article>"
  ]
}